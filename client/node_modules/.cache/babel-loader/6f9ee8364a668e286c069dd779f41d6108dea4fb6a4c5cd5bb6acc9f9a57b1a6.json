{"ast":null,"code":"var _jsxFileName = \"D:\\\\COS40004\\\\COS40004_Project\\\\client\\\\src\\\\DeviceManager.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DeviceManager = () => {\n  _s();\n  const [devices, setDevices] = useState([]);\n  const [deviceToUpdate, setDeviceToUpdate] = useState(null);\n  const [newName, setNewName] = useState(\"\");\n  useEffect(() => {\n    fetch(\"/api/devices\").then(response => response.json()).then(setDevices);\n  }, []);\n  const handleUpdateClick = device => {\n    setDeviceToUpdate(device);\n    setNewName(device.name);\n  };\n  const handleNameChange = event => {\n    setNewName(event.target.value);\n  };\n  const handleUpdateSubmit = event => {\n    event.preventDefault();\n    fetch(`/api/devices/${deviceToUpdate._id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name: newName\n      })\n    }).then(response => response.json()).then(updatedDevice => {\n      setDevices(devices.map(device => device._id === updatedDevice._id ? updatedDevice : device));\n      setDeviceToUpdate(null);\n      setNewName(\"\");\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Device Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: devices.map(device => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [device.name, \" (\", device._id, \")\", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleUpdateClick(device),\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)]\n      }, device._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), deviceToUpdate && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleUpdateSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: newName,\n        onChange: handleNameChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(DeviceManager, \"uF2qiF84ayH5ASgGdTp0DqKLXuI=\");\n_c = DeviceManager;\nexport { DeviceManager };\nvar _c;\n$RefreshReg$(_c, \"DeviceManager\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","DeviceManager","_s","devices","setDevices","deviceToUpdate","setDeviceToUpdate","newName","setNewName","fetch","then","response","json","handleUpdateClick","device","name","handleNameChange","event","target","value","handleUpdateSubmit","preventDefault","_id","method","headers","body","JSON","stringify","updatedDevice","map","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","onChange","type","_c","$RefreshReg$"],"sources":["D:/COS40004/COS40004_Project/client/src/DeviceManager.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nconst DeviceManager = () => {\r\n  const [devices, setDevices] = useState([]);\r\n  const [deviceToUpdate, setDeviceToUpdate] = useState(null);\r\n  const [newName, setNewName] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    fetch(\"/api/devices\")\r\n      .then((response) => response.json())\r\n      .then(setDevices);\r\n  }, []);\r\n\r\n  const handleUpdateClick = (device) => {\r\n    setDeviceToUpdate(device);\r\n    setNewName(device.name);\r\n  };\r\n\r\n  const handleNameChange = (event) => {\r\n    setNewName(event.target.value);\r\n  };\r\n\r\n  const handleUpdateSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    fetch(`/api/devices/${deviceToUpdate._id}`, {\r\n      method: \"PATCH\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ name: newName }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((updatedDevice) => {\r\n        setDevices(\r\n          devices.map((device) =>\r\n            device._id === updatedDevice._id ? updatedDevice : device\r\n          )\r\n        );\r\n        setDeviceToUpdate(null);\r\n        setNewName(\"\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Device Manager</h1>\r\n      <ul>\r\n        {devices.map((device) => (\r\n          <li key={device._id}>\r\n            {device.name} ({device._id})\r\n            <button onClick={() => handleUpdateClick(device)}>Update</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      {deviceToUpdate && (\r\n        <form onSubmit={handleUpdateSubmit}>\r\n          <input value={newName} onChange={handleNameChange} />\r\n          <button type=\"submit\">Submit</button>\r\n        </form>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport {DeviceManager};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}