{"ast":null,"code":"var _jsxFileName = \"D:\\\\COS40004\\\\COS40004_Project\\\\client\\\\src\\\\Modal.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./Modal.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Modal(_ref) {\n  _s();\n  let {\n    device,\n    states,\n    onClose\n  } = _ref;\n  const [boards, setBoards] = useState([]);\n  useEffect(() => {\n    fetch(\"/boards\").then(response => response.json()).then(data => setBoards(data));\n  }, []);\n  const checkState = sensor => {\n    let selectedSensor = sensor.name;\n    if (Array.isArray(selectedSensor)) {\n      selectedSensor = selectedSensor.join(\", \");\n    }\n    let sensorValue = sensor.value;\n    console.log(sensorValue); // Add this line\n    if (Array.isArray(sensorValue)) {\n      sensorValue = sensorValue.join(\", \");\n    }\n    const matchingStates = states.filter(state => state.device_name && selectedSensor && state.device_name.toLowerCase() === device.Name.toLowerCase() && state.sensor_name.toLowerCase() === selectedSensor.toLowerCase());\n    for (let state of matchingStates) {\n      switch (state.condition) {\n        case \"<\":\n          if (sensor.value < state.parameter) return state.name;\n          break;\n        case \">\":\n          if (sensor.value > state.parameter) return state.name;\n          break;\n        case \"<=\":\n          if (sensor.value <= state.parameter) return state.name;\n          break;\n        case \">=\":\n          if (sensor.value >= state.parameter) return state.name;\n          break;\n        case \"=\":\n          if (sensor.value === state.parameter) return state.name;\n          break;\n        default:\n          break;\n      }\n    }\n    return \"Default\";\n  };\n\n  // Get the most recent board data for this device\n  const deviceBoards = boards.filter(board => board.device_id === device._id);\n  deviceBoards.sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp));\n  const recentBoard = deviceBoards[0];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"close-button\",\n        onClick: onClose,\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: device.Name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), recentBoard && /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Sensor Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Value\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"State\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: recentBoard.sensors.map(sensor => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: sensor.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: Array.isArray(sensor.value) ? sensor.value.join(\", \") : sensor.value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: checkState(sensor)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 19\n            }, this)]\n          }, sensor.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(Modal, \"cNp00MRMrR2DWBpPFcviSR9le4k=\");\n_c = Modal;\nexport default Modal;\nvar _c;\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Modal","_ref","_s","device","states","onClose","boards","setBoards","fetch","then","response","json","data","checkState","sensor","selectedSensor","name","Array","isArray","join","sensorValue","value","console","log","matchingStates","filter","state","device_name","toLowerCase","Name","sensor_name","condition","parameter","deviceBoards","board","device_id","_id","sort","a","b","Date","timestamp","recentBoard","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","sensors","map","_c","$RefreshReg$"],"sources":["D:/COS40004/COS40004_Project/client/src/Modal.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./Modal.css\";\r\n\r\nfunction Modal({ device, states, onClose }) {\r\n  const [boards, setBoards] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(\"/boards\")\r\n      .then((response) => response.json())\r\n      .then((data) => setBoards(data));\r\n  }, []);\r\n\r\n  const checkState = (sensor) => {\r\n    let selectedSensor = sensor.name;\r\n    if (Array.isArray(selectedSensor)) {\r\n      selectedSensor = selectedSensor.join(\", \");\r\n    }\r\n    let sensorValue = sensor.value;\r\n    console.log(sensorValue); // Add this line\r\n    if (Array.isArray(sensorValue)) {\r\n      sensorValue = sensorValue.join(\", \");\r\n    }\r\n\r\n    const matchingStates = states.filter(\r\n      (state) =>\r\n        state.device_name &&\r\n        selectedSensor &&\r\n        state.device_name.toLowerCase() === device.Name.toLowerCase() &&\r\n        state.sensor_name.toLowerCase() === selectedSensor.toLowerCase()\r\n    );\r\n\r\n    for (let state of matchingStates) {\r\n      switch (state.condition) {\r\n        case \"<\":\r\n          if (sensor.value < state.parameter) return state.name;\r\n          break;\r\n        case \">\":\r\n          if (sensor.value > state.parameter) return state.name;\r\n          break;\r\n        case \"<=\":\r\n          if (sensor.value <= state.parameter) return state.name;\r\n          break;\r\n        case \">=\":\r\n          if (sensor.value >= state.parameter) return state.name;\r\n          break;\r\n        case \"=\":\r\n          if (sensor.value === state.parameter) return state.name;\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n    return \"Default\";\r\n  };\r\n\r\n  // Get the most recent board data for this device\r\n  const deviceBoards = boards.filter((board) => board.device_id === device._id);\r\n  deviceBoards.sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp));\r\n  const recentBoard = deviceBoards[0];\r\n\r\n  return (\r\n    <div className=\"modal\">\r\n      <div className=\"modal-content\">\r\n        <span className=\"close-button\" onClick={onClose}>\r\n          &times;\r\n        </span>\r\n        <h2>{device.Name}</h2>\r\n        {recentBoard && (\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Sensor Name</th>\r\n                <th>Value</th>\r\n                <th>State</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {recentBoard.sensors.map((sensor) => (\r\n                <tr key={sensor.name}>\r\n                  <td>{sensor.name}</td>\r\n                  <td>\r\n                    {Array.isArray(sensor.value)\r\n                      ? sensor.value.join(\", \")\r\n                      : sensor.value}\r\n                  </td>\r\n                  <td>{checkState(sensor)}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Modal;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}