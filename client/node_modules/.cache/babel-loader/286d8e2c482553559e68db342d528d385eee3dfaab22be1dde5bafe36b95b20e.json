{"ast":null,"code":"var _jsxFileName = \"D:\\\\COS40004\\\\COS40004_Project\\\\client\\\\src\\\\DeviceManager.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport \"./DeviceManager.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DeviceManager = () => {\n  _s();\n  const [devices, setDevices] = useState([]);\n  const [editing, setEditing] = useState(false);\n  const [newName, setNewName] = useState(\"\");\n  const [device, setDevice] = useState(null);\n  useEffect(() => {\n    fetch(\"/devices\").then(res => {\n      if (!res.ok) {\n        throw new Error(`HTTP error ${res.status}`);\n      }\n      return res.json();\n    }).then(data => {\n      const defaultDevices = data.filter(device => device.name.startsWith(\"default\"));\n      // Add numbers to device names\n      defaultDevices.forEach((device, index) => {\n        device.name = `default_${index + 1}`;\n      });\n      setDevices(defaultDevices);\n    }).catch(err => console.error(\"Error fetching devices:\", err));\n  }, []);\n  const handleEdit = device => {\n    setEditing(true);\n    setDevice(device);\n    setNewName(device.name);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    fetch(`/devices/max/${newName}`).then(res => {\n      if (!res.ok) {\n        throw new Error(`HTTP error ${res.status}`);\n      }\n      return res.json();\n    }).then(maxDevice => {\n      const maxNumber = maxDevice ? parseInt(maxDevice.name.split(\"_\")[1]) : 0;\n      const nextName = `${newName}_${maxNumber + 1}`;\n      fetch(`/devices/${device._id}`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          name: nextName\n        })\n      }).then(res => {\n        if (!res.ok) {\n          throw new Error(`HTTP error ${res.status}`);\n        }\n        return res.json();\n      }).then(updatedDevice => {\n        setEditing(false);\n        setDevice(updatedDevice);\n        setDevices(devices.map(dev => dev._id === updatedDevice._id ? updatedDevice : dev));\n      }).catch(err => console.error(\"Error updating device:\", err));\n    }).catch(err => console.error(\"Error fetching max device:\", err));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [devices.map(device => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"unRegDev\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: device.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: device._id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleEdit(device),\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)]\n    }, device._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this)), editing && /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"DevForm\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"New Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: newName,\n        onChange: e => setNewName(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select One\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"CAR\",\n          children: \"CAR\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"OFFICE\",\n          children: \"OFFICE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"FACTORY\",\n          children: \"FACTORY\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(DeviceManager, \"7MTn5Fd+Ic+nHajfR0vA2mkHf3A=\");\n_c = DeviceManager;\nexport { DeviceManager };\nvar _c;\n$RefreshReg$(_c, \"DeviceManager\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","DeviceManager","_s","devices","setDevices","editing","setEditing","newName","setNewName","device","setDevice","fetch","then","res","ok","Error","status","json","data","defaultDevices","filter","name","startsWith","forEach","index","catch","err","console","error","handleEdit","handleSubmit","e","preventDefault","maxDevice","maxNumber","parseInt","split","nextName","_id","method","headers","body","JSON","stringify","updatedDevice","map","dev","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","value","onChange","target","type","_c","$RefreshReg$"],"sources":["D:/COS40004/COS40004_Project/client/src/DeviceManager.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport \"./DeviceManager.css\";\r\n\r\nconst DeviceManager = () => {\r\n  const [devices, setDevices] = useState([]);\r\n  const [editing, setEditing] = useState(false);\r\n  const [newName, setNewName] = useState(\"\");\r\n  const [device, setDevice] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetch(\"/devices\")\r\n      .then((res) => {\r\n        if (!res.ok) {\r\n          throw new Error(`HTTP error ${res.status}`);\r\n        }\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        const defaultDevices = data.filter((device) =>\r\n          device.name.startsWith(\"default\")\r\n        );\r\n        // Add numbers to device names\r\n        defaultDevices.forEach((device, index) => {\r\n          device.name = `default_${index + 1}`;\r\n        });\r\n        setDevices(defaultDevices);\r\n      })\r\n      .catch((err) => console.error(\"Error fetching devices:\", err));\r\n  }, []);\r\n\r\n  const handleEdit = (device) => {\r\n    setEditing(true);\r\n    setDevice(device);\r\n    setNewName(device.name);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    fetch(`/devices/max/${newName}`)\r\n      .then((res) => {\r\n        if (!res.ok) {\r\n          throw new Error(`HTTP error ${res.status}`);\r\n        }\r\n        return res.json();\r\n      })\r\n      .then((maxDevice) => {\r\n        const maxNumber = maxDevice\r\n          ? parseInt(maxDevice.name.split(\"_\")[1])\r\n          : 0;\r\n        const nextName = `${newName}_${maxNumber + 1}`;\r\n\r\n        fetch(`/devices/${device._id}`, {\r\n          method: \"PATCH\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({ name: nextName }),\r\n        })\r\n          .then((res) => {\r\n            if (!res.ok) {\r\n              throw new Error(`HTTP error ${res.status}`);\r\n            }\r\n            return res.json();\r\n          })\r\n          .then((updatedDevice) => {\r\n            setEditing(false);\r\n            setDevice(updatedDevice);\r\n            setDevices(\r\n              devices.map((dev) =>\r\n                dev._id === updatedDevice._id ? updatedDevice : dev\r\n              )\r\n            );\r\n          })\r\n          .catch((err) => console.error(\"Error updating device:\", err));\r\n      })\r\n      .catch((err) => console.error(\"Error fetching max device:\", err));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {devices.map((device) => (\r\n        <div key={device._id} className=\"unRegDev\">\r\n          <h3>{device.name}</h3>\r\n          <h4>{device._id}</h4>\r\n          <button onClick={() => handleEdit(device)}>Edit</button>\r\n        </div>\r\n      ))}\r\n\r\n      {editing && (\r\n        <form className=\"DevForm\" onSubmit={handleSubmit}>\r\n          <h3>New Name:</h3>\r\n          <select value={newName} onChange={(e) => setNewName(e.target.value)}>\r\n            <option value=\"\">Select One</option>\r\n            <option value=\"CAR\">CAR</option>\r\n            <option value=\"OFFICE\">OFFICE</option>\r\n            <option value=\"FACTORY\">FACTORY</option>\r\n          </select>\r\n          <button type=\"submit\">Submit</button>\r\n        </form>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { DeviceManager };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}