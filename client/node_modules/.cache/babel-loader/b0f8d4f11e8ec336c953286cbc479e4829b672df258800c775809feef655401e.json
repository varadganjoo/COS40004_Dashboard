{"ast":null,"code":"var _jsxFileName = \"D:\\\\COS40004\\\\COS40004_Project\\\\client\\\\src\\\\Query.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport io from \"socket.io-client\";\nimport Modal from \"./Modal\";\nimport \"./Query.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AverageComponent(_ref) {\n  _s();\n  let {\n    device_id,\n    sensor_name\n  } = _ref;\n  const [timePeriod, setTimePeriod] = useState(\"\");\n  const [average, setAverage] = useState(\"\");\n  const handleInputChange = event => {\n    setTimePeriod(event.target.value);\n  };\n  const handleAverageCalculation = () => {\n    fetch(`/boards/device/${device_id}/sensor/${sensor_name}?timePeriod=${timePeriod}`).then(response => {\n      console.log(response);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      return response.json();\n    }).then(data => {\n      setAverage(data.average);\n    }).catch(error => {\n      console.log(\"There was an error!\", error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      placeholder: \"Enter time in seconds\",\n      value: timePeriod,\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAverageCalculation,\n      children: \"Calculate Average\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), average && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Average: \", average]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(AverageComponent, \"IDLUuxCvaML1njbXD8GYy76eaKg=\");\n_c = AverageComponent;\nfunction Query() {\n  _s2();\n  const [devices, setDevices] = useState([]);\n  const [boards, setBoards] = useState([]);\n  const [sensorHistories, setSensorHistories] = useState({});\n  const [selectedScenario, setSelectedScenario] = useState(\"ALL\");\n  const [selectedDevice, setSelectedDevice] = useState(\"ALL\");\n  const [modalDevice, setModalDevice] = useState(null);\n  useEffect(() => {\n    fetch(\"/devices\").then(response => response.json()).then(data => {\n      if (data) {\n        setDevices(data);\n      }\n    });\n    fetch(\"/boards\").then(response => response.json()).then(data => {\n      if (data) {\n        setBoards(data);\n        let newSensorHistories = {};\n        for (let board of data) {\n          for (let sensor of board === null || board === void 0 ? void 0 : board.sensors) {\n            let sensorName = sensor === null || sensor === void 0 ? void 0 : sensor.name.toLowerCase();\n            if (!newSensorHistories[sensorName]) {\n              newSensorHistories[sensorName] = [];\n            }\n            newSensorHistories[sensorName].push({\n              value: sensor === null || sensor === void 0 ? void 0 : sensor.value,\n              timestamp: new Date()\n            });\n          }\n        }\n        setSensorHistories(newSensorHistories);\n      }\n    });\n  }, []);\n  const handleScenarioChange = event => {\n    setSelectedScenario(event.target.value);\n    setSelectedDevice(\"ALL\");\n  };\n  const handleDeviceChange = event => {\n    setSelectedDevice(event.target.value);\n  };\n  const displaySensors = (sensor, index) => {\n    if ((sensor.name === \"BME\" || sensor.name === \"MPU\") && sensor.type === \"i2c\" && Array.isArray(sensor.value)) {\n      const sensorProperties = sensor.name === \"BME\" ? [\"Temperature\", \"Humidity\", \"Pressure\", \"Gas\"] : [\"Acc-X\", \"Acc-Y\", \"Acc-Z\", \"Gyro-X\", \"Gyro-Y\", \"Gyro-Z\"];\n      return sensor.value.map((val, index) => {\n        const sensorName = `${sensor.name}-${sensorProperties[index]}`.toLowerCase();\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sensorData\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Sensor Name: \", sensorName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Sensor Value: \", val]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this)]\n        }, `${sensorName}-${index}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this);\n      });\n    } else {\n      const sensorName = sensor.name.toLowerCase();\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sensorData\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Sensor Name: \", sensorName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Sensor Value: \", sensor.value]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)]\n      }, `${sensor.name}-${index}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this);\n    }\n  };\n  const scenarioDevices = devices.filter(device => {\n    if (selectedScenario === \"ALL\") return true;\n    return device.name.startsWith(selectedScenario + \"_\");\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Query\",\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedScenario,\n      onChange: handleScenarioChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"ALL\",\n        children: \"ALL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"CAR\",\n        children: \"CAR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"OFFICE\",\n        children: \"OFFICE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"FACTORY\",\n        children: \"FACTORY\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), selectedScenario !== \"ALL\" && /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedDevice,\n      onChange: handleDeviceChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"ALL\",\n        children: \"ALL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this), scenarioDevices.map(device => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: device.name,\n        children: device.name\n      }, device._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }, this), scenarioDevices.filter(device => {\n      if (selectedDevice === \"ALL\") return true;\n      return device.name === selectedDevice;\n    }).map(device => {\n      const deviceBoards = boards.filter(board => board.device_id === device._id);\n      deviceBoards.sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp));\n      const recentBoard = deviceBoards[0];\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Device: \", device.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 15\n        }, this), recentBoard && recentBoard.sensors.map(displaySensors)]\n      }, device._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 13\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n}\n_s2(Query, \"s/zZZUTLCy2uY8avZEVky5HXy1Y=\");\n_c2 = Query;\nexport { Query };\nvar _c, _c2;\n$RefreshReg$(_c, \"AverageComponent\");\n$RefreshReg$(_c2, \"Query\");","map":{"version":3,"names":["React","useEffect","useState","io","Modal","jsxDEV","_jsxDEV","AverageComponent","_ref","_s","device_id","sensor_name","timePeriod","setTimePeriod","average","setAverage","handleInputChange","event","target","value","handleAverageCalculation","fetch","then","response","console","log","ok","Error","status","json","data","catch","error","children","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","Query","_s2","devices","setDevices","boards","setBoards","sensorHistories","setSensorHistories","selectedScenario","setSelectedScenario","selectedDevice","setSelectedDevice","modalDevice","setModalDevice","newSensorHistories","board","sensor","sensors","sensorName","name","toLowerCase","push","timestamp","Date","handleScenarioChange","handleDeviceChange","displaySensors","index","Array","isArray","sensorProperties","map","val","className","scenarioDevices","filter","device","startsWith","_id","deviceBoards","sort","a","b","recentBoard","_c2","$RefreshReg$"],"sources":["D:/COS40004/COS40004_Project/client/src/Query.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport Modal from \"./Modal\";\r\nimport \"./Query.css\";\r\n\r\nfunction AverageComponent({ device_id, sensor_name }) {\r\n  const [timePeriod, setTimePeriod] = useState(\"\");\r\n  const [average, setAverage] = useState(\"\");\r\n\r\n  const handleInputChange = (event) => {\r\n    setTimePeriod(event.target.value);\r\n  };\r\n\r\n  const handleAverageCalculation = () => {\r\n    fetch(\r\n      `/boards/device/${device_id}/sensor/${sensor_name}?timePeriod=${timePeriod}`\r\n    )\r\n      .then((response) => {\r\n        console.log(response);\r\n        if (!response.ok) {\r\n          throw new Error(`HTTP error! status: ${response.status}`);\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        setAverage(data.average);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"There was an error!\", error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"number\"\r\n        placeholder=\"Enter time in seconds\"\r\n        value={timePeriod}\r\n        onChange={handleInputChange}\r\n      />\r\n      <button onClick={handleAverageCalculation}>Calculate Average</button>\r\n      {average && <p>Average: {average}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Query() {\r\n  const [devices, setDevices] = useState([]);\r\n  const [boards, setBoards] = useState([]);\r\n  const [sensorHistories, setSensorHistories] = useState({});\r\n  const [selectedScenario, setSelectedScenario] = useState(\"ALL\");\r\n  const [selectedDevice, setSelectedDevice] = useState(\"ALL\"); \r\n  const [modalDevice, setModalDevice] = useState(null);\r\n\r\n  useEffect(() => {\r\n\r\n    \r\n    fetch(\"/devices\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (data) {\r\n          setDevices(data);\r\n        }\r\n      });\r\n\r\n    fetch(\"/boards\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (data) {\r\n          setBoards(data);\r\n          let newSensorHistories = {};\r\n          for (let board of data) {\r\n            for (let sensor of board?.sensors) {\r\n              let sensorName = sensor?.name.toLowerCase();\r\n              if (!newSensorHistories[sensorName]) {\r\n                newSensorHistories[sensorName] = [];\r\n              }\r\n              newSensorHistories[sensorName].push({\r\n                value: sensor?.value,\r\n                timestamp: new Date(),\r\n              });\r\n            }\r\n          }\r\n          setSensorHistories(newSensorHistories);\r\n        }\r\n      });\r\n  }, []);\r\n\r\n  const handleScenarioChange = (event) => {\r\n    setSelectedScenario(event.target.value);\r\n    setSelectedDevice(\"ALL\");\r\n  };\r\n\r\n  const handleDeviceChange = (event) => {\r\n    setSelectedDevice(event.target.value);\r\n  };\r\n\r\n  const displaySensors = (sensor, index) => {\r\n    if (\r\n      (sensor.name === \"BME\" || sensor.name === \"MPU\") &&\r\n      sensor.type === \"i2c\" &&\r\n      Array.isArray(sensor.value)\r\n    ) {\r\n      const sensorProperties =\r\n        sensor.name === \"BME\"\r\n          ? [\"Temperature\", \"Humidity\", \"Pressure\", \"Gas\"]\r\n          : [\"Acc-X\", \"Acc-Y\", \"Acc-Z\", \"Gyro-X\", \"Gyro-Y\", \"Gyro-Z\"];\r\n      return sensor.value.map((val, index) => {\r\n        const sensorName =\r\n          `${sensor.name}-${sensorProperties[index]}`.toLowerCase();\r\n        return (\r\n          <div key={`${sensorName}-${index}`} className=\"sensorData\">\r\n            <p>Sensor Name: {sensorName}</p>\r\n            <p>Sensor Value: {val}</p>\r\n          </div>\r\n        );\r\n      });\r\n    } else {\r\n      const sensorName = sensor.name.toLowerCase();\r\n      return (\r\n        <div key={`${sensor.name}-${index}`} className=\"sensorData\">\r\n          <p>Sensor Name: {sensorName}</p>\r\n          <p>Sensor Value: {sensor.value}</p>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  const scenarioDevices = devices.filter((device) => {\r\n    if (selectedScenario === \"ALL\") return true;\r\n    return device.name.startsWith(selectedScenario + \"_\");\r\n  });\r\n\r\n  return (\r\n    <div className=\"Query\">\r\n      <select value={selectedScenario} onChange={handleScenarioChange}>\r\n        <option value=\"ALL\">ALL</option>\r\n        <option value=\"CAR\">CAR</option>\r\n        <option value=\"OFFICE\">OFFICE</option>\r\n        <option value=\"FACTORY\">FACTORY</option>\r\n      </select>\r\n      {selectedScenario !== \"ALL\" && (\r\n        <select value={selectedDevice} onChange={handleDeviceChange}>\r\n          <option value=\"ALL\">ALL</option>\r\n          {scenarioDevices.map((device) => (\r\n            <option key={device._id} value={device.name}>\r\n              {device.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      )}\r\n\r\n      {scenarioDevices\r\n        .filter((device) => {\r\n          if (selectedDevice === \"ALL\") return true;\r\n          return device.name === selectedDevice;\r\n        })\r\n        .map((device) => {\r\n          const deviceBoards = boards.filter(\r\n            (board) => board.device_id === device._id\r\n          );\r\n          deviceBoards.sort(\r\n            (a, b) => new Date(b.timestamp) - new Date(a.timestamp)\r\n          );\r\n          const recentBoard = deviceBoards[0];\r\n\r\n          return (\r\n            <div key={device._id}>\r\n              <h2>Device: {device.name}</h2>\r\n              {recentBoard && recentBoard.sensors.map(displaySensors)}\r\n            </div>\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { Query };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}