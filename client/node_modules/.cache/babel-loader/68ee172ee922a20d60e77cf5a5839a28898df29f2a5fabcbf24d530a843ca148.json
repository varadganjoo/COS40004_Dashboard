{"ast":null,"code":"var _jsxFileName = \"D:\\\\COS40004\\\\COS40004_Project\\\\client\\\\src\\\\DeviceManager.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport \"./DeviceManager.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DeviceManager = () => {\n  _s();\n  const [devices, setDevices] = useState([]);\n  const [editing, setEditing] = useState(false);\n  const [newName, setNewName] = useState(\"\");\n  const [device, setDevice] = useState(null);\n  useEffect(() => {\n    fetch(\"/devices\").then(res => {\n      if (!res.ok) {\n        throw new Error(`HTTP error ${res.status}`);\n      }\n      return res.json();\n    }).then(data => {\n      const defaultDevices = data.filter(device => device.name.startsWith(\"default\"));\n      // Add numbers to device names\n      defaultDevices.forEach((device, index) => {\n        device.name = `default_${index + 1}`;\n      });\n      setDevices(defaultDevices);\n    }).catch(err => console.error(\"Error fetching devices:\", err));\n  }, []);\n  const handleEdit = device => {\n    setEditing(true);\n    setDevice(device);\n    setNewName(device.name);\n  };\n  const handleSelection = e => {\n    const selectedPrefix = e.target.value;\n    fetch(`/devices?name=${selectedPrefix}`).then(res => {\n      if (!res.ok) {\n        throw new Error(`HTTP error ${res.status}`);\n      }\n      return res.json();\n    }).then(data => {\n      const prefixDevices = data.filter(device => device.name.startsWith(selectedPrefix));\n      const nextNumber = prefixDevices.length > 0 ? Math.max(...prefixDevices.map(device => parseInt(device.name.split('_')[1]))) + 1 : 1;\n      setNewName(`${selectedPrefix}_${nextNumber}`);\n    }).catch(err => console.error(\"Error fetching devices:\", err));\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    fetch(`/devices/${device._id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name: newName\n      })\n    }).then(res => {\n      if (!res.ok) {\n        throw new Error(`HTTP error ${res.status}`);\n      }\n      return res.json();\n    }).then(updatedDevice => {\n      setEditing(false);\n      setDevice(updatedDevice);\n      setDevices(devices.map(dev => dev._id === updatedDevice._id ? updatedDevice : dev));\n    }).catch(err => console.error(\"Error updating device:\", err));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [devices.map(device => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"unRegDev\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: device.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: device._id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleEdit(device),\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)]\n    }, device._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this)), editing && /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"DevForm\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"New Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: handleSelection,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"CAR\",\n          children: \"CAR\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"OFFICE\",\n          children: \"OFFICE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"FACTORY\",\n          children: \"FACTORY\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(DeviceManager, \"7MTn5Fd+Ic+nHajfR0vA2mkHf3A=\");\n_c = DeviceManager;\nexport { DeviceManager };\nvar _c;\n$RefreshReg$(_c, \"DeviceManager\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","DeviceManager","_s","devices","setDevices","editing","setEditing","newName","setNewName","device","setDevice","fetch","then","res","ok","Error","status","json","data","defaultDevices","filter","name","startsWith","forEach","index","catch","err","console","error","handleEdit","handleSelection","e","selectedPrefix","target","value","prefixDevices","nextNumber","length","Math","max","map","parseInt","split","handleSubmit","preventDefault","_id","method","headers","body","JSON","stringify","updatedDevice","dev","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","onChange","type","_c","$RefreshReg$"],"sources":["D:/COS40004/COS40004_Project/client/src/DeviceManager.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport \"./DeviceManager.css\";\r\n\r\nconst DeviceManager = () => {\r\n  const [devices, setDevices] = useState([]);\r\n  const [editing, setEditing] = useState(false);\r\n  const [newName, setNewName] = useState(\"\");\r\n  const [device, setDevice] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetch(\"/devices\")\r\n      .then((res) => {\r\n        if (!res.ok) {\r\n          throw new Error(`HTTP error ${res.status}`);\r\n        }\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        const defaultDevices = data.filter((device) =>\r\n          device.name.startsWith(\"default\")\r\n        );\r\n        // Add numbers to device names\r\n        defaultDevices.forEach((device, index) => {\r\n          device.name = `default_${index + 1}`;\r\n        });\r\n        setDevices(defaultDevices);\r\n      })\r\n      .catch((err) => console.error(\"Error fetching devices:\", err));\r\n  }, []);\r\n\r\n  const handleEdit = (device) => {\r\n    setEditing(true);\r\n    setDevice(device);\r\n    setNewName(device.name);\r\n  };\r\n\r\n  const handleSelection = (e) => {\r\n    const selectedPrefix = e.target.value;\r\n    fetch(`/devices?name=${selectedPrefix}`)\r\n      .then((res) => {\r\n        if (!res.ok) {\r\n          throw new Error(`HTTP error ${res.status}`);\r\n        }\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        const prefixDevices = data.filter(device => device.name.startsWith(selectedPrefix));\r\n        const nextNumber = prefixDevices.length > 0\r\n          ? Math.max(...prefixDevices.map(device => parseInt(device.name.split('_')[1]))) + 1\r\n          : 1;\r\n        setNewName(`${selectedPrefix}_${nextNumber}`);\r\n      })\r\n      .catch((err) => console.error(\"Error fetching devices:\", err));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    fetch(`/devices/${device._id}`, {\r\n      method: \"PATCH\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ name: newName }),\r\n    })\r\n      .then((res) => {\r\n        if (!res.ok) {\r\n          throw new Error(`HTTP error ${res.status}`);\r\n        }\r\n        return res.json();\r\n      })\r\n      .then((updatedDevice) => {\r\n        setEditing(false);\r\n        setDevice(updatedDevice);\r\n        setDevices(\r\n          devices.map((dev) =>\r\n            dev._id === updatedDevice._id ? updatedDevice : dev\r\n          )\r\n        );\r\n      })\r\n      .catch((err) => console.error(\"Error updating device:\", err));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {devices.map((device) => (\r\n        <div key={device._id} className=\"unRegDev\">\r\n          <h3>{device.name}</h3>\r\n          <h4>{device._id}</h4>\r\n          <button onClick={() => handleEdit(device)}>Edit</button>\r\n        </div>\r\n      ))}\r\n\r\n      {editing && (\r\n        <form className=\"DevForm\" onSubmit={handleSubmit}>\r\n          <h3>New Name:</h3>\r\n          <select onChange={handleSelection}>\r\n            <option value=\"CAR\">CAR</option>\r\n            <option value=\"OFFICE\">OFFICE</option>\r\n            <option value=\"FACTORY\">FACTORY</option>\r\n          </select>\r\n          <button type=\"submit\">Submit</button>\r\n        </form>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { DeviceManager };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}