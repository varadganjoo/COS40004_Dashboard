{"ast":null,"code":"var _jsxFileName = \"D:\\\\COS40004\\\\COS40004_Project\\\\client\\\\src\\\\DeviceManager.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DeviceManager = () => {\n  _s();\n  const [devices, setDevices] = useState([]);\n  const [editing, setEditing] = useState(false);\n  const [newName, setNewName] = useState(\"\");\n  const [device, setDevice] = useState(null);\n  useEffect(() => {\n    fetch(\"/devices\").then(res => {\n      if (!res.ok) {\n        throw new Error(`HTTP error ${res.status}`);\n      }\n      return res.json();\n    }).then(data => {\n      const defaultDevices = data.filter(device => device.name === \"default\");\n      setDevices(defaultDevices);\n    }).catch(err => console.error(\"Error fetching devices:\", err));\n  }, []);\n  const handleEdit = device => {\n    setEditing(true);\n    setDevice(device);\n    setNewName(device.name);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    fetch(`/devices/${device._id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name: newName\n      })\n    }).then(res => {\n      if (!res.ok) {\n        throw new Error(`HTTP error ${res.status}`);\n      }\n      return res.json();\n    }).then(updatedDevice => {\n      setEditing(false);\n      setDevice(updatedDevice);\n      setDevices(devices.map(dev => dev._id === updatedDevice._id ? updatedDevice : dev));\n    }).catch(err => console.error(\"Error updating device:\", err));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [devices.map(device => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: device.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: device._id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleEdit(device),\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)]\n    }, device._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)), editing && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newName,\n        onChange: e => setNewName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(DeviceManager, \"7MTn5Fd+Ic+nHajfR0vA2mkHf3A=\");\n_c = DeviceManager;\nexport { DeviceManager };\nvar _c;\n$RefreshReg$(_c, \"DeviceManager\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","DeviceManager","_s","devices","setDevices","editing","setEditing","newName","setNewName","device","setDevice","fetch","then","res","ok","Error","status","json","data","defaultDevices","filter","name","catch","err","console","error","handleEdit","handleSubmit","e","preventDefault","_id","method","headers","body","JSON","stringify","updatedDevice","map","dev","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","type","value","onChange","target","_c","$RefreshReg$"],"sources":["D:/COS40004/COS40004_Project/client/src/DeviceManager.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nconst DeviceManager = () => {\r\n  const [devices, setDevices] = useState([]);\r\n  const [editing, setEditing] = useState(false);\r\n  const [newName, setNewName] = useState(\"\");\r\n  const [device, setDevice] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetch(\"/devices\")\r\n      .then((res) => {\r\n        if (!res.ok) {\r\n          throw new Error(`HTTP error ${res.status}`);\r\n        }\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        const defaultDevices = data.filter(\r\n          (device) => device.name === \"default\"\r\n        );\r\n        setDevices(defaultDevices);\r\n      })\r\n      .catch((err) => console.error(\"Error fetching devices:\", err));\r\n  }, []);\r\n\r\n  const handleEdit = (device) => {\r\n    setEditing(true);\r\n    setDevice(device);\r\n    setNewName(device.name);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    fetch(`/devices/${device._id}`, {\r\n      method: \"PATCH\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ name: newName }),\r\n    })\r\n      .then((res) => {\r\n        if (!res.ok) {\r\n          throw new Error(`HTTP error ${res.status}`);\r\n        }\r\n        return res.json();\r\n      })\r\n      .then((updatedDevice) => {\r\n        setEditing(false);\r\n        setDevice(updatedDevice);\r\n        setDevices(\r\n          devices.map((dev) =>\r\n            dev._id === updatedDevice._id ? updatedDevice : dev\r\n          )\r\n        );\r\n      })\r\n      .catch((err) => console.error(\"Error updating device:\", err));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {devices.map((device) => (\r\n        <div key={device._id}>\r\n          <h2>{device.name}</h2>\r\n          <h3>{device._id}</h3>\r\n          <button onClick={() => handleEdit(device)}>Edit</button>\r\n        </div>\r\n      ))}\r\n\r\n      {editing && (\r\n        <form onSubmit={handleSubmit}>\r\n          <input\r\n            type=\"text\"\r\n            value={newName}\r\n            onChange={(e) => setNewName(e.target.value)}\r\n          />\r\n          <button type=\"submit\">Submit</button>\r\n        </form>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport {DeviceManager};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}