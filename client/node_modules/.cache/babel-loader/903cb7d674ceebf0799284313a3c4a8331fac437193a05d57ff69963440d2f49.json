{"ast":null,"code":"var _jsxFileName = \"D:\\\\COS40004\\\\COS40004_Project\\\\client\\\\src\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./Dashboard.css\";\nimport Modal from \"./Modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const [devices, setDevices] = useState([]);\n  const [boards, setBoards] = useState([]);\n  const [states, setStates] = useState([]);\n  const [selectedDevice, setSelectedDevice] = useState(null);\n  useEffect(() => {\n    // Fetch initial data\n    fetch(\"/devices\").then(response => response.json()).then(data => setDevices(data));\n    fetch(\"/boards\").then(response => response.json()).then(data => setBoards(data));\n    fetch(\"/states\").then(response => response.json()).then(data => setStates(data));\n\n    // Setup WebSocket connection\n    const ws = new WebSocket(\"ws://localhost:3001\");\n    ws.onopen = () => {\n      console.log(\"connected to server\");\n    };\n    ws.onmessage = event => {\n      console.log(\"received change\", event.data);\n\n      // Fetch updated data when a change is received\n      fetch(\"/boards\").then(response => response.json()).then(data => setBoards(data));\n    };\n    ws.onerror = error => {\n      console.log(\"WebSocket error: \", error);\n    };\n    ws.onclose = () => {\n      console.log(\"disconnected from server\");\n    };\n\n    // Clean up WebSocket connection when component unmounts\n    return () => {\n      ws.close();\n    };\n  }, []);\n  console.log(boards);\n  const handleDeviceClick = device => {\n    setSelectedDevice(device);\n  };\n  const handleModalClose = () => {\n    setSelectedDevice(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [devices.map(device => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"device-box\",\n      onClick: () => handleDeviceClick(device),\n      children: device.Name\n    }, device._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)), selectedDevice && /*#__PURE__*/_jsxDEV(Modal, {\n      device: selectedDevice,\n      boards: boards,\n      states: states,\n      onClose: handleModalClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"KmMP3RXQpnQOGwQg4psJa+Yh68c=\");\n_c = Dashboard;\nexport { Dashboard };\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","Modal","jsxDEV","_jsxDEV","Dashboard","_s","devices","setDevices","boards","setBoards","states","setStates","selectedDevice","setSelectedDevice","fetch","then","response","json","data","ws","WebSocket","onopen","console","log","onmessage","event","onerror","error","onclose","close","handleDeviceClick","device","handleModalClose","className","children","map","onClick","Name","_id","fileName","_jsxFileName","lineNumber","columnNumber","onClose","_c","$RefreshReg$"],"sources":["D:/COS40004/COS40004_Project/client/src/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./Dashboard.css\";\r\nimport Modal from \"./Modal\";\r\n\r\nfunction Dashboard() {\r\n  const [devices, setDevices] = useState([]);\r\n  const [boards, setBoards] = useState([]);\r\n  const [states, setStates] = useState([]);\r\n  const [selectedDevice, setSelectedDevice] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Fetch initial data\r\n    fetch(\"/devices\")\r\n      .then((response) => response.json())\r\n      .then((data) => setDevices(data));\r\n\r\n    fetch(\"/boards\")\r\n      .then((response) => response.json())\r\n      .then((data) => setBoards(data));\r\n\r\n    fetch(\"/states\")\r\n      .then((response) => response.json())\r\n      .then((data) => setStates(data));\r\n\r\n    // Setup WebSocket connection\r\n    const ws = new WebSocket(\"ws://localhost:3001\");\r\n\r\n    ws.onopen = () => {\r\n      console.log(\"connected to server\");\r\n    };\r\n\r\n    ws.onmessage = (event) => {\r\n      console.log(\"received change\", event.data);\r\n\r\n      // Fetch updated data when a change is received\r\n      fetch(\"/boards\")\r\n        .then((response) => response.json())\r\n        .then((data) => setBoards(data));\r\n    };\r\n\r\n    ws.onerror = (error) => {\r\n      console.log(\"WebSocket error: \", error);\r\n    };\r\n\r\n    ws.onclose = () => {\r\n      console.log(\"disconnected from server\");\r\n    };\r\n\r\n    // Clean up WebSocket connection when component unmounts\r\n    return () => {\r\n      ws.close();\r\n    };\r\n  }, []);\r\n\r\n  console.log(boards);\r\n\r\n  const handleDeviceClick = (device) => {\r\n    setSelectedDevice(device);\r\n  };\r\n\r\n  const handleModalClose = () => {\r\n    setSelectedDevice(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      {devices.map((device) => (\r\n        <div\r\n          className=\"device-box\"\r\n          onClick={() => handleDeviceClick(device)}\r\n          key={device._id}\r\n        >\r\n          {device.Name}\r\n        </div>\r\n      ))}\r\n      {selectedDevice && (\r\n        <Modal\r\n          device={selectedDevice}\r\n          boards={boards}\r\n          states={states}\r\n          onClose={handleModalClose}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { Dashboard };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}