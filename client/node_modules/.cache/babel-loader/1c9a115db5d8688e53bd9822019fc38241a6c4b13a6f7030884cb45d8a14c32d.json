{"ast":null,"code":"var _jsxFileName = \"D:\\\\COS40004\\\\COS40004_Project\\\\client\\\\src\\\\Query.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Query() {\n  _s();\n  const [devices, setDevices] = useState([]);\n  const [states, setStates] = useState([]);\n  const [selectedDevice, setSelectedDevice] = useState(\"\");\n  const [selectedState, setSelectedState] = useState(\"\");\n  const [dateRange, setDateRange] = useState({\n    start: \"\",\n    end: \"\"\n  });\n  const [deviceData, setDeviceData] = useState([]);\n  useEffect(() => {\n    fetch(\"/devices\").then(response => response.json()).then(data => setDevices(data));\n    fetch(\"/states\").then(response => response.json()).then(data => setStates(data));\n  }, []);\n  const handleDeviceChange = event => {\n    setSelectedDevice(event.target.value);\n    updateData();\n  };\n  const handleStateChange = event => {\n    setSelectedState(event.target.value);\n    updateData();\n  };\n  const handleDateChange = event => {\n    setDateRange({\n      ...dateRange,\n      [event.target.name]: event.target.value\n    });\n  };\n  const updateData = () => {\n    let url = \"/boards?\";\n    if (selectedDevice) url += `device_id=${selectedDevice}&`;\n    if (selectedState) url += `state=${selectedState}&`;\n    if (dateRange.start) url += `start_date=${dateRange.start}&`;\n    if (dateRange.end) url += `end_date=${dateRange.end}&`;\n    fetch(url).then(response => response.json()).then(data => setDeviceData(data));\n  };\n  useEffect(updateData, [selectedDevice, selectedState, dateRange]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Query Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedDevice,\n      onChange: handleDeviceChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"--Select a device--\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), devices.map(device => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: device._id,\n        children: device.name\n      }, device._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedState,\n      onChange: handleStateChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"--Select a state--\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), states.map(state => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: state.name,\n        children: state.name\n      }, state._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      name: \"start\",\n      value: dateRange.start,\n      onChange: handleDateChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      name: \"end\",\n      value: dateRange.end,\n      onChange: handleDateChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), deviceData.map(board => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: new Date(board.timestamp).toLocaleString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), board.sensors.map((sensor, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [sensor.name, \": \", sensor.value]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this))]\n    }, board._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(Query, \"pWyHdITgX/dBWts3XKq7wrMugrw=\");\n_c = Query;\nexport { Query };\nvar _c;\n$RefreshReg$(_c, \"Query\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Query","_s","devices","setDevices","states","setStates","selectedDevice","setSelectedDevice","selectedState","setSelectedState","dateRange","setDateRange","start","end","deviceData","setDeviceData","fetch","then","response","json","data","handleDeviceChange","event","target","value","updateData","handleStateChange","handleDateChange","name","url","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","map","device","_id","state","type","board","Date","timestamp","toLocaleString","sensors","sensor","index","_c","$RefreshReg$"],"sources":["D:/COS40004/COS40004_Project/client/src/Query.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nfunction Query() {\r\n  const [devices, setDevices] = useState([]);\r\n  const [states, setStates] = useState([]);\r\n  const [selectedDevice, setSelectedDevice] = useState(\"\");\r\n  const [selectedState, setSelectedState] = useState(\"\");\r\n  const [dateRange, setDateRange] = useState({\r\n    start: \"\",\r\n    end: \"\",\r\n  });\r\n  const [deviceData, setDeviceData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(\"/devices\")\r\n      .then((response) => response.json())\r\n      .then((data) => setDevices(data));\r\n    fetch(\"/states\")\r\n      .then((response) => response.json())\r\n      .then((data) => setStates(data));\r\n  }, []);\r\n\r\n  const handleDeviceChange = (event) => {\r\n    setSelectedDevice(event.target.value);\r\n    updateData();\r\n  };\r\n\r\n  const handleStateChange = (event) => {\r\n    setSelectedState(event.target.value);\r\n    updateData();\r\n  };\r\n\r\n  const handleDateChange = (event) => {\r\n    setDateRange({ ...dateRange, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const updateData = () => {\r\n    let url = \"/boards?\";\r\n    if (selectedDevice) url += `device_id=${selectedDevice}&`;\r\n    if (selectedState) url += `state=${selectedState}&`;\r\n    if (dateRange.start) url += `start_date=${dateRange.start}&`;\r\n    if (dateRange.end) url += `end_date=${dateRange.end}&`;\r\n\r\n    fetch(url)\r\n      .then((response) => response.json())\r\n      .then((data) => setDeviceData(data));\r\n  };\r\n\r\n  useEffect(updateData, [selectedDevice, selectedState, dateRange]);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Query Page</h1>\r\n\r\n      <select value={selectedDevice} onChange={handleDeviceChange}>\r\n        <option value=\"\">--Select a device--</option>\r\n        {devices.map((device) => (\r\n          <option key={device._id} value={device._id}>\r\n            {device.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n\r\n      <select value={selectedState} onChange={handleStateChange}>\r\n        <option value=\"\">--Select a state--</option>\r\n        {states.map((state) => (\r\n          <option key={state._id} value={state.name}>\r\n            {state.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n\r\n      <input\r\n        type=\"date\"\r\n        name=\"start\"\r\n        value={dateRange.start}\r\n        onChange={handleDateChange}\r\n      />\r\n      <input\r\n        type=\"date\"\r\n        name=\"end\"\r\n        value={dateRange.end}\r\n        onChange={handleDateChange}\r\n      />\r\n\r\n      {deviceData.map((board) => (\r\n        <div key={board._id}>\r\n          <h2>{new Date(board.timestamp).toLocaleString()}</h2>\r\n          {board.sensors.map((sensor, index) => (\r\n            <p key={index}>\r\n              {sensor.name}: {sensor.value}\r\n            </p>\r\n          ))}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport {Query};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}