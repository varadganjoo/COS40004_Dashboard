{"ast":null,"code":"var _jsxFileName = \"D:\\\\COS40004\\\\COS40004_Project\\\\client\\\\src\\\\Query.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Query() {\n  _s();\n  const [devices, setDevices] = useState([]);\n  const [states, setStates] = useState([]);\n  const [selectedDevice, setSelectedDevice] = useState(\"\");\n  const [selectedState, setSelectedState] = useState(\"\");\n  const [deviceData, setDeviceData] = useState([]);\n  const sensorProperties = {\n    BME: [\"Temperature\", \"Humidity\", \"Pressure\", \"Gas\"],\n    NPU: [\"Acc-X\", \"Acc-Y\", \"Acc-Z\", \"Gyro-X\", \"Gyro-Y\", \"Gyro-Z\"]\n  };\n  useEffect(() => {\n    fetch(\"/devices\").then(response => response.json()).then(data => setDevices(data));\n    fetch(\"/states\").then(response => response.json()).then(data => setStates(data));\n  }, []);\n  const handleDeviceChange = async event => {\n    console.log;\n    setSelectedDevice(event.target.value);\n  };\n  const handleStateChange = async event => {\n    setSelectedState(event.target.value);\n  };\n  const updateData = () => {\n    if (selectedDevice) {\n      fetch(`/boards/${selectedDevice}`).then(response => response.json()).then(data => {\n        const filteredData = data.filter(board => checkStateForBoard(board));\n        setDeviceData(filteredData);\n      });\n    }\n  };\n  const checkStateForBoard = board => {\n    console.log(board);\n    for (let sensor of board.sensors) {\n      if (sensor.type === \"i2c\" && Array.isArray(sensor.value)) {\n        const sensorProps = sensorProperties[sensor.name];\n        for (let i = 0; i < sensor.value.length; i++) {\n          const sensorName = `${sensor.name}-${sensorProps[i]}`.toLowerCase();\n          const sensorValue = sensor.value[i];\n          if (checkStateForSensor(sensorName, sensorValue)) {\n            return true;\n          }\n        }\n      } else {\n        if (checkStateForSensor(sensor.name, sensor.value)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n  const checkStateForSensor = (sensorName, sensorValue) => {\n    var _devices$find;\n    const deviceName = (_devices$find = devices.find(device => device._id === selectedDevice)) === null || _devices$find === void 0 ? void 0 : _devices$find.name;\n    const matchingStates = states.filter(state => state.device_name.toLowerCase() === deviceName.toLowerCase() && state.sensor_name.toLowerCase() === sensorName.toLowerCase());\n    for (let state of matchingStates) {\n      if (state.name === selectedState) {\n        switch (state.condition) {\n          case \"<\":\n            return sensorValue < state.parameter;\n          case \">\":\n            return sensorValue > state.parameter;\n          case \"<=\":\n            return sensorValue <= state.parameter;\n          case \">=\":\n            return sensorValue >= state.parameter;\n          case \"=\":\n            return sensorValue === state.parameter;\n          default:\n            return false;\n        }\n      }\n    }\n    return false;\n  };\n  useEffect(updateData, [selectedDevice, selectedState]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Query Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: handleDeviceChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        children: \"--Select a device--\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), devices.map(device => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: device._id,\n        children: device.name\n      }, device._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: handleStateChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        children: \"--Select a state--\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), states.filter(state => {\n        var _devices$find2;\n        return state.device_name === ((_devices$find2 = devices.find(device => device._id === selectedDevice)) === null || _devices$find2 === void 0 ? void 0 : _devices$find2.name);\n      }).map(state => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: state.name,\n        children: state.name\n      }, state._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), deviceData.map(board => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: new Date(board.timestamp).toLocaleString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this), board.sensors.map((sensor, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [sensor.name, \": \", sensor.value]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }, this))]\n    }, board._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n}\n_s(Query, \"Ot/U8/8FpIG8W7iHp6MdXwlT2LE=\");\n_c = Query;\nexport { Query };\nvar _c;\n$RefreshReg$(_c, \"Query\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Query","_s","devices","setDevices","states","setStates","selectedDevice","setSelectedDevice","selectedState","setSelectedState","deviceData","setDeviceData","sensorProperties","BME","NPU","fetch","then","response","json","data","handleDeviceChange","event","console","log","target","value","handleStateChange","updateData","filteredData","filter","board","checkStateForBoard","sensor","sensors","type","Array","isArray","sensorProps","name","i","length","sensorName","toLowerCase","sensorValue","checkStateForSensor","_devices$find","deviceName","find","device","_id","matchingStates","state","device_name","sensor_name","condition","parameter","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","map","_devices$find2","Date","timestamp","toLocaleString","index","_c","$RefreshReg$"],"sources":["D:/COS40004/COS40004_Project/client/src/Query.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nfunction Query() {\r\n  const [devices, setDevices] = useState([]);\r\n  const [states, setStates] = useState([]);\r\n  const [selectedDevice, setSelectedDevice] = useState(\"\");\r\n  const [selectedState, setSelectedState] = useState(\"\");\r\n  const [deviceData, setDeviceData] = useState([]);\r\n\r\n  const sensorProperties = {\r\n    BME: [\"Temperature\", \"Humidity\", \"Pressure\", \"Gas\"],\r\n    NPU: [\"Acc-X\", \"Acc-Y\", \"Acc-Z\", \"Gyro-X\", \"Gyro-Y\", \"Gyro-Z\"],\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetch(\"/devices\")\r\n      .then((response) => response.json())\r\n      .then((data) => setDevices(data));\r\n    fetch(\"/states\")\r\n      .then((response) => response.json())\r\n      .then((data) => setStates(data));\r\n  }, []);\r\n\r\n  const handleDeviceChange = async (event) => {\r\n    console.log\r\n    setSelectedDevice(event.target.value);\r\n  };\r\n\r\n  const handleStateChange = async (event) => {\r\n    setSelectedState(event.target.value);\r\n  };\r\n\r\n  const updateData = () => {\r\n    if (selectedDevice) {\r\n      fetch(`/boards/${selectedDevice}`)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          const filteredData = data.filter((board) =>\r\n            checkStateForBoard(board)\r\n          );\r\n          setDeviceData(filteredData);\r\n        });\r\n    }\r\n  };\r\n\r\n  const checkStateForBoard = (board) => {\r\n    console.log(board);\r\n    for (let sensor of board.sensors) {\r\n      if (sensor.type === \"i2c\" && Array.isArray(sensor.value)) {\r\n        const sensorProps = sensorProperties[sensor.name];\r\n        for (let i = 0; i < sensor.value.length; i++) {\r\n          const sensorName = `${sensor.name}-${sensorProps[i]}`.toLowerCase();\r\n          const sensorValue = sensor.value[i];\r\n          if (checkStateForSensor(sensorName, sensorValue)) {\r\n            return true;\r\n          }\r\n        }\r\n      } else {\r\n        if (checkStateForSensor(sensor.name, sensor.value)) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const checkStateForSensor = (sensorName, sensorValue) => {\r\n    const deviceName = devices.find(\r\n      (device) => device._id === selectedDevice\r\n    )?.name;\r\n    const matchingStates = states.filter(\r\n      (state) =>\r\n        state.device_name.toLowerCase() === deviceName.toLowerCase() &&\r\n        state.sensor_name.toLowerCase() === sensorName.toLowerCase()\r\n    );\r\n\r\n    for (let state of matchingStates) {\r\n      if (state.name === selectedState) {\r\n        switch (state.condition) {\r\n          case \"<\":\r\n            return sensorValue < state.parameter;\r\n          case \">\":\r\n            return sensorValue > state.parameter;\r\n          case \"<=\":\r\n            return sensorValue <= state.parameter;\r\n          case \">=\":\r\n            return sensorValue >= state.parameter;\r\n          case \"=\":\r\n            return sensorValue === state.parameter;\r\n          default:\r\n            return false;\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  useEffect(updateData, [selectedDevice, selectedState]);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Query Page</h1>\r\n\r\n      <select onChange={handleDeviceChange}>\r\n        <option>--Select a device--</option>\r\n        {devices.map((device) => (\r\n          <option key={device._id} value={device._id}>\r\n            {device.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n\r\n      <select onChange={handleStateChange}>\r\n        <option>--Select a state--</option>\r\n        {states\r\n          .filter(\r\n            (state) =>\r\n              state.device_name ===\r\n              devices.find((device) => device._id === selectedDevice)?.name\r\n          )\r\n          .map((state) => (\r\n            <option key={state._id} value={state.name}>\r\n              {state.name}\r\n            </option>\r\n          ))}\r\n      </select>\r\n\r\n      {deviceData.map((board) => (\r\n        <div key={board._id}>\r\n          <h2>{new Date(board.timestamp).toLocaleString()}</h2>\r\n          {board.sensors.map((sensor, index) => (\r\n            <p key={index}>\r\n              {sensor.name}: {sensor.value}\r\n            </p>\r\n          ))}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { Query };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}