{"ast":null,"code":"var _jsxFileName = \"D:\\\\COS40004\\\\COS40004_Project\\\\client\\\\src\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./Dashboard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const [devices, setDevices] = useState([]);\n  const [states, setStates] = useState([]);\n  useEffect(() => {\n    fetch(\"/devices\").then(res => res.json()).then(data => setDevices(data)).catch(err => console.log(err));\n    fetch(\"/states\").then(res => res.json()).then(data => setStates(data)).catch(err => console.log(err));\n  }, []);\n  console.log(devices); // Add this line\n\n  function getState(device, board) {\n    const deviceStates = states.filter(state => state.Device === device.Name);\n    for (const state of deviceStates) {\n      const parameter = board.data.get(state.Device);\n      if (parameter) {\n        const conditionMet = eval(`${parameter} ${state.Condition} ${state.Parameter}`);\n        if (conditionMet) {\n          return state.Name;\n        }\n      }\n    }\n    return \"Unknown\";\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), devices.map(device => {\n      const board = null; // Update this line\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-device\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: device.Name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this), board ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"State: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: getState(device, board)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 28\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: Array.from(board.data.entries()).map(_ref => {\n              let [key, value] = _ref;\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [key, \": \", value]\n              }, key, true, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 23\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No data available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this)]\n      }, device._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 7\n  }, this);\n}\n_s(Dashboard, \"CNM7xr2nGYqqV0bD6nexQLcSQeU=\");\n_c = Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","_s","devices","setDevices","states","setStates","fetch","then","res","json","data","catch","err","console","log","getState","device","board","deviceStates","filter","state","Device","Name","parameter","get","conditionMet","eval","Condition","Parameter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","Array","from","entries","_ref","key","value","_id","_c","$RefreshReg$"],"sources":["D:/COS40004/COS40004_Project/client/src/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./Dashboard.css\";\r\n\r\nfunction Dashboard() {\r\n    const [devices, setDevices] = useState([]);\r\n    const [states, setStates] = useState([]);\r\n  \r\n    useEffect(() => {\r\n      fetch(\"/devices\")\r\n        .then((res) => res.json())\r\n        .then((data) => setDevices(data))\r\n        .catch((err) => console.log(err));\r\n      fetch(\"/states\")\r\n        .then((res) => res.json())\r\n        .then((data) => setStates(data))\r\n        .catch((err) => console.log(err));\r\n    }, []);\r\n  \r\n    console.log(devices); // Add this line\r\n  \r\n    function getState(device, board) {\r\n      const deviceStates = states.filter((state) => state.Device === device.Name);\r\n      for (const state of deviceStates) {\r\n        const parameter = board.data.get(state.Device);\r\n        if (parameter) {\r\n          const conditionMet = eval(\r\n            `${parameter} ${state.Condition} ${state.Parameter}`\r\n          );\r\n          if (conditionMet) {\r\n            return state.Name;\r\n          }\r\n        }\r\n      }\r\n      return \"Unknown\";\r\n    }\r\n  \r\n    return (\r\n      <div className=\"dashboard-page\">\r\n        <h1>Dashboard</h1>\r\n        {devices.map((device) => {\r\n          const board = null; // Update this line\r\n          return (\r\n            <div key={device._id} className=\"dashboard-device\">\r\n              <h2>{device.Name}</h2>\r\n              {board ? (\r\n                <>\r\n                  <p>\r\n                    State: <strong>{getState(device, board)}</strong>\r\n                  </p>\r\n                  <ul>\r\n                    {Array.from(board.data.entries()).map(([key, value]) => (\r\n                      <li key={key}>\r\n                        {key}: {value}\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                </>\r\n              ) : (\r\n                <p>No data available</p>\r\n              )}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}