{"ast":null,"code":"var _jsxFileName = \"D:\\\\COS40004\\\\COS40004_Project\\\\client\\\\src\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./Dashboard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const [devices, setDevices] = useState([]);\n  const [boards, setBoards] = useState([]);\n  const [states, setStates] = useState([]);\n  useEffect(() => {\n    fetch(\"/devices\").then(res => res.json()).then(data => setDevices(data));\n    fetch(\"/boards\").then(res => res.json()).then(data => setBoards(data));\n    fetch(\"/states\").then(res => res.json()).then(data => setStates(data));\n  }, []);\n  function getState(device, board) {\n    const deviceStates = states.filter(state => state.Device === device.Name);\n    for (const state of deviceStates) {\n      const parameter = board.data.get(state.Device);\n      if (parameter) {\n        const conditionMet = eval(`${parameter} ${state.Condition} ${state.Parameter}`);\n        if (conditionMet) {\n          return state.Name;\n        }\n      }\n    }\n    return \"Unknown\";\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), devices.map(device => {\n      const board = boards.find(board => board._id === device._id);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-device\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: device.Name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), board ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"State: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: getState(device, board)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 26\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: Array.from(board.data.entries()).map(_ref => {\n              let [key, value] = _ref;\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [key, \": \", value]\n              }, key, true, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No data available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this)]\n      }, device._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"3GcCiUCgKGYyulBi+AM5O43f+hg=\");\n_c = Dashboard;\nexport { Dashboard };\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","_s","devices","setDevices","boards","setBoards","states","setStates","fetch","then","res","json","data","getState","device","board","deviceStates","filter","state","Device","Name","parameter","get","conditionMet","eval","Condition","Parameter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","find","_id","Array","from","entries","_ref","key","value","_c","$RefreshReg$"],"sources":["D:/COS40004/COS40004_Project/client/src/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./Dashboard.css\";\r\n\r\nfunction Dashboard() {\r\n  const [devices, setDevices] = useState([]);\r\n  const [boards, setBoards] = useState([]);\r\n  const [states, setStates] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(\"/devices\")\r\n      .then((res) => res.json())\r\n      .then((data) => setDevices(data));\r\n    fetch(\"/boards\")\r\n      .then((res) => res.json())\r\n      .then((data) => setBoards(data));\r\n    fetch(\"/states\")\r\n      .then((res) => res.json())\r\n      .then((data) => setStates(data));\r\n  }, []);\r\n\r\n  function getState(device, board) {\r\n    const deviceStates = states.filter((state) => state.Device === device.Name);\r\n    for (const state of deviceStates) {\r\n      const parameter = board.data.get(state.Device);\r\n      if (parameter) {\r\n        const conditionMet = eval(`${parameter} ${state.Condition} ${state.Parameter}`);\r\n        if (conditionMet) {\r\n          return state.Name;\r\n        }\r\n      }\r\n    }\r\n    return \"Unknown\";\r\n  }\r\n\r\n  return (\r\n    <div className=\"dashboard-page\">\r\n      <h1>Dashboard</h1>\r\n      {devices.map((device) => {\r\n        const board = boards.find((board) => board._id === device._id);\r\n        return (\r\n          <div key={device._id} className=\"dashboard-device\">\r\n            <h2>{device.Name}</h2>\r\n            {board ? (\r\n              <>\r\n                <p>\r\n                  State: <strong>{getState(device, board)}</strong>\r\n                </p>\r\n                <ul>\r\n                  {Array.from(board.data.entries()).map(([key, value]) => (\r\n                    <li key={key}>\r\n                      {key}: {value}\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </>\r\n            ) : (\r\n              <p>No data available</p>\r\n            )}\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { Dashboard };\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEzB,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACU,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACY,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAExCC,SAAS,CAAC,MAAM;IACda,KAAK,CAAC,UAAU,CAAC,CACdC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAKT,UAAU,CAACS,IAAI,CAAC,CAAC;IACnCJ,KAAK,CAAC,SAAS,CAAC,CACbC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAKP,SAAS,CAACO,IAAI,CAAC,CAAC;IAClCJ,KAAK,CAAC,SAAS,CAAC,CACbC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAKL,SAAS,CAACK,IAAI,CAAC,CAAC;EACpC,CAAC,EAAE,EAAE,CAAC;EAEN,SAASC,QAAQA,CAACC,MAAM,EAAEC,KAAK,EAAE;IAC/B,MAAMC,YAAY,GAAGV,MAAM,CAACW,MAAM,CAAEC,KAAK,IAAKA,KAAK,CAACC,MAAM,KAAKL,MAAM,CAACM,IAAI,CAAC;IAC3E,KAAK,MAAMF,KAAK,IAAIF,YAAY,EAAE;MAChC,MAAMK,SAAS,GAAGN,KAAK,CAACH,IAAI,CAACU,GAAG,CAACJ,KAAK,CAACC,MAAM,CAAC;MAC9C,IAAIE,SAAS,EAAE;QACb,MAAME,YAAY,GAAGC,IAAI,CAAE,GAAEH,SAAU,IAAGH,KAAK,CAACO,SAAU,IAAGP,KAAK,CAACQ,SAAU,EAAC,CAAC;QAC/E,IAAIH,YAAY,EAAE;UAChB,OAAOL,KAAK,CAACE,IAAI;QACnB;MACF;IACF;IACA,OAAO,SAAS;EAClB;EAEA,oBACEvB,OAAA;IAAK8B,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7B/B,OAAA;MAAA+B,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACjB9B,OAAO,CAAC+B,GAAG,CAAEnB,MAAM,IAAK;MACvB,MAAMC,KAAK,GAAGX,MAAM,CAAC8B,IAAI,CAAEnB,KAAK,IAAKA,KAAK,CAACoB,GAAG,KAAKrB,MAAM,CAACqB,GAAG,CAAC;MAC9D,oBACEtC,OAAA;QAAsB8B,SAAS,EAAC,kBAAkB;QAAAC,QAAA,gBAChD/B,OAAA;UAAA+B,QAAA,EAAKd,MAAM,CAACM;QAAI;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,EACrBjB,KAAK,gBACJlB,OAAA,CAAAE,SAAA;UAAA6B,QAAA,gBACE/B,OAAA;YAAA+B,QAAA,GAAG,SACM,eAAA/B,OAAA;cAAA+B,QAAA,EAASf,QAAQ,CAACC,MAAM,EAAEC,KAAK;YAAC;cAAAc,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAS,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChD,CAAC,eACJnC,OAAA;YAAA+B,QAAA,EACGQ,KAAK,CAACC,IAAI,CAACtB,KAAK,CAACH,IAAI,CAAC0B,OAAO,CAAC,CAAC,CAAC,CAACL,GAAG,CAACM,IAAA;cAAA,IAAC,CAACC,GAAG,EAAEC,KAAK,CAAC,GAAAF,IAAA;cAAA,oBACjD1C,OAAA;gBAAA+B,QAAA,GACGY,GAAG,EAAC,IAAE,EAACC,KAAK;cAAA,GADND,GAAG;gBAAAX,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAER,CAAC;YAAA,CACN;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC;QAAA,eACL,CAAC,gBAEHnC,OAAA;UAAA+B,QAAA,EAAG;QAAiB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CACxB;MAAA,GAjBOlB,MAAM,CAACqB,GAAG;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAkBf,CAAC;IAEV,CAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAAC/B,EAAA,CA5DQD,SAAS;AAAA0C,EAAA,GAAT1C,SAAS;AA8DlB,SAASA,SAAS;AAAG,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}