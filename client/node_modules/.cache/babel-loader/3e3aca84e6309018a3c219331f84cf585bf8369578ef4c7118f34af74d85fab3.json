{"ast":null,"code":"var _jsxFileName = \"D:\\\\COS40004\\\\COS40004_Project\\\\client\\\\src\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./Dashboard.css\";\nimport Modal from \"./Modal\";\nimport io from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const [devices, setDevices] = useState([]);\n  const [boards, setBoards] = useState([]);\n  const [states, setStates] = useState([]);\n  const [selectedDevice, setSelectedDevice] = useState(null);\n  const [socket, setSocket] = useState(null);\n  useEffect(() => {\n    // Fetch initial data\n    fetch(\"/devices\").then(response => response.json()).then(data => setDevices(data));\n    fetch(\"/boards\").then(response => response.json()).then(data => setBoards(data));\n    fetch(\"/states\").then(response => response.json()).then(data => setStates(data));\n\n    // Initialize socket connection\n    const socket = io.connect(\"/\");\n    setSocket(socket);\n\n    // Listen for changes\n    socket.on(\"boardUpdate\", newBoard => {\n      setBoards(prevBoards => [...prevBoards, newBoard]);\n    });\n    return () => {\n      // Disconnect socket when component unmounts\n      socket.disconnect();\n    };\n  }, []);\n  const handleDeviceClick = device => {\n    setSelectedDevice(device);\n  };\n  const handleModalClose = () => {\n    setSelectedDevice(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [devices.map(device => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"device-box\",\n      onClick: () => handleDeviceClick(device),\n      children: device.Name\n    }, device._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)), selectedDevice && /*#__PURE__*/_jsxDEV(Modal, {\n      device: selectedDevice,\n      boards: boards,\n      states: states,\n      onClose: handleModalClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"LxQy0xLIrupP3eYR1jbLsMEoaUc=\");\n_c = Dashboard;\nexport { Dashboard };\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","Modal","io","jsxDEV","_jsxDEV","Dashboard","_s","devices","setDevices","boards","setBoards","states","setStates","selectedDevice","setSelectedDevice","socket","setSocket","fetch","then","response","json","data","connect","on","newBoard","prevBoards","disconnect","handleDeviceClick","device","handleModalClose","className","children","map","onClick","Name","_id","fileName","_jsxFileName","lineNumber","columnNumber","onClose","_c","$RefreshReg$"],"sources":["D:/COS40004/COS40004_Project/client/src/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./Dashboard.css\";\r\nimport Modal from \"./Modal\";\r\nimport io from \"socket.io-client\";\r\n\r\nfunction Dashboard() {\r\n  const [devices, setDevices] = useState([]);\r\n  const [boards, setBoards] = useState([]);\r\n  const [states, setStates] = useState([]);\r\n  const [selectedDevice, setSelectedDevice] = useState(null);\r\n  const [socket, setSocket] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Fetch initial data\r\n    fetch(\"/devices\")\r\n      .then((response) => response.json())\r\n      .then((data) => setDevices(data));\r\n\r\n    fetch(\"/boards\")\r\n      .then((response) => response.json())\r\n      .then((data) => setBoards(data));\r\n\r\n    fetch(\"/states\")\r\n      .then((response) => response.json())\r\n      .then((data) => setStates(data));\r\n\r\n    // Initialize socket connection\r\n    const socket = io.connect(\"/\");\r\n    setSocket(socket);\r\n\r\n    // Listen for changes\r\n    socket.on(\"boardUpdate\", (newBoard) => {\r\n      setBoards((prevBoards) => [...prevBoards, newBoard]);\r\n    });\r\n\r\n    return () => {\r\n      // Disconnect socket when component unmounts\r\n      socket.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  const handleDeviceClick = (device) => {\r\n    setSelectedDevice(device);\r\n  };\r\n\r\n  const handleModalClose = () => {\r\n    setSelectedDevice(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      {devices.map((device) => (\r\n        <div\r\n          className=\"device-box\"\r\n          onClick={() => handleDeviceClick(device)}\r\n          key={device._id}\r\n        >\r\n          {device.Name}\r\n        </div>\r\n      ))}\r\n      {selectedDevice && (\r\n        <Modal\r\n          device={selectedDevice}\r\n          boards={boards}\r\n          states={states}\r\n          onClose={handleModalClose}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { Dashboard };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}