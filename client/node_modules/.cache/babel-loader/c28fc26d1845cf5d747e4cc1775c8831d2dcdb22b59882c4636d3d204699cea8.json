{"ast":null,"code":"var _jsxFileName = \"D:\\\\COS40004\\\\COS40004_Project\\\\client\\\\src\\\\Query.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./Query.css\";\nimport io from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AverageComponent(_ref) {\n  _s();\n  let {\n    device_id,\n    sensor_name\n  } = _ref;\n  const [timePeriod, setTimePeriod] = useState(\"\");\n  const [average, setAverage] = useState(\"\");\n  const handleInputChange = event => {\n    setTimePeriod(event.target.value);\n  };\n  const handleAverageCalculation = () => {\n    fetch(`/boards/device/${device_id}/sensor/${sensor_name}?timePeriod=${timePeriod}`).then(response => {\n      console.log(response);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      return response.json();\n    }).then(data => {\n      setAverage(data.average);\n    }).catch(error => {\n      console.log(\"There was an error!\", error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      placeholder: \"Enter time in seconds\",\n      value: timePeriod,\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAverageCalculation,\n      children: \"Calculate Average\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), average && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Average: \", average]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(AverageComponent, \"IDLUuxCvaML1njbXD8GYy76eaKg=\");\n_c = AverageComponent;\nfunction Query() {\n  _s2();\n  const [boards, setBoards] = useState([]);\n  const [devices, setDevices] = useState([]);\n  const [states, setStates] = useState([]);\n  const [selectedScenario, setSelectedScenario] = useState(\"ALL\");\n  const [selectedDevice, setSelectedDevice] = useState(\"ALL\");\n  const [selectedState, setSelectedState] = useState(\"ALL\");\n  const [uniqueStates, setUniqueStates] = useState([]);\n  useEffect(() => {\n    fetch(\"/boards\").then(response => response.json()).then(data => setBoards(data)).catch(error => console.error(\"Error:\", error));\n  }, []);\n  useEffect(() => {\n    fetch(\"/devices\").then(response => response.json()).then(data => setDevices(data)).catch(error => console.error(\"Error:\", error));\n  }, []);\n  useEffect(() => {\n    fetch(\"/states\").then(response => response.json()).then(data => {\n      setStates(data);\n      let uniqueNames = Array.from(new Set(data.map(s => s.name)));\n      setUniqueStates(uniqueNames);\n    }).catch(error => console.error(\"Error:\", error));\n  }, []);\n  const checkStateForIndividualSensor = (deviceName, sensorName, sensorValue) => {\n    const matchingStates = states.filter(state => {\n      return state.device_name.toLowerCase() === deviceName.toLowerCase() && state.sensor_name.toLowerCase() === sensorName.toLowerCase();\n    });\n    let result = \"Default\";\n    for (let state of matchingStates) {\n      switch (state.condition) {\n        case \"<\":\n          if (sensorValue < state.parameter) result = state.name;\n          break;\n        case \">\":\n          if (sensorValue > state.parameter) result = state.name;\n          break;\n        case \"<=\":\n          if (sensorValue <= state.parameter) result = state.name;\n          break;\n        case \">=\":\n          if (sensorValue >= state.parameter) result = state.name;\n          break;\n        case \"=\":\n          if (sensorValue === state.parameter) result = state.name;\n          break;\n        case \"idle\":\n          if (sensorValue === state.parameter) result = state.name;\n          break;\n        default:\n          break;\n      }\n    }\n    return result;\n  };\n  const displaySensors = (sensor, index, board) => {\n    var _devices$find;\n    const deviceName = (_devices$find = devices.find(device => device._id === board.device_id)) === null || _devices$find === void 0 ? void 0 : _devices$find.name;\n    if (sensor.name === \"BME\" || sensor.name === \"MPU\") {\n      const sensorProperties = sensor.name === \"BME\" ? [\"Temperature\", \"Humidity\", \"Pressure\", \"Gas\"] : [\"Acc-X\", \"Acc-Y\", \"Acc-Z\", \"Gyro-X\", \"Gyro-Y\", \"Gyro-Z\"];\n      return sensor.value.map((val, index) => {\n        const sensorName = `${sensor.name}-${sensorProperties[index]}`;\n        const state = checkStateForIndividualSensor(deviceName, sensorName, val);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: sensorName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: val\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: state\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AverageComponent, {\n            device_id: board.device_id,\n            sensor_name: sensorName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this)]\n        }, `${sensor.name}-${index}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this);\n      });\n    } else {\n      const state = checkStateForIndividualSensor(deviceName, sensor.name, sensor.value);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: sensor.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: sensor.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: state\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AverageComponent, {\n          device_id: board.device_id,\n          sensor_name: sensor.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this)]\n      }, `${sensor.name}-${index}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this);\n    }\n  };\n  const displayBoards = (board, index) => {\n    var _devices$find3;\n    if (selectedState !== \"ALL\") {\n      board.sensors = board.sensors.filter(sensor => {\n        var _devices$find2;\n        const deviceName = (_devices$find2 = devices.find(device => device._id === board.device_id)) === null || _devices$find2 === void 0 ? void 0 : _devices$find2.name;\n        const state = sensor.name === \"BME\" || sensor.name === \"MPU\" ? checkStateForIndividualSensor(deviceName, `${sensor.name}-Temperature`, sensor.value[0]) : checkStateForIndividualSensor(deviceName, sensor.name, sensor.value);\n        return state === selectedState;\n      });\n      if (board.sensors.length === 0) {\n        return null;\n      }\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: (_devices$find3 = devices.find(device => device._id === board.device_id)) === null || _devices$find3 === void 0 ? void 0 : _devices$find3.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), board.sensors.map((sensor, index) => displaySensors(sensor, index, board))]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Filter by scenario: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => setSelectedScenario(e.target.value),\n        value: selectedScenario,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"ALL\",\n          children: \"ALL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"SCENARIO1\",\n          children: \"SCENARIO1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"SCENARIO2\",\n          children: \"SCENARIO2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"SCENARIO3\",\n          children: \"SCENARIO3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Filter by device: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => setSelectedDevice(e.target.value),\n        value: selectedDevice,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"ALL\",\n          children: \"ALL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this), devices.map((device, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: device._id,\n          children: device.name\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this), selectedScenario !== \"ALL\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Filter by state: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => setSelectedState(e.target.value),\n        value: selectedState,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"ALL\",\n          children: \"ALL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 13\n        }, this), uniqueStates.map((state, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: state,\n          children: state\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 9\n    }, this), selectedState !== \"ALL\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Devices with a sensor in state \\\"\", selectedState, \"\\\":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: boards.filter(board => board.sensors.some(sensor => {\n          var _devices$find4;\n          const deviceName = (_devices$find4 = devices.find(device => device._id === board.device_id)) === null || _devices$find4 === void 0 ? void 0 : _devices$find4.name;\n          const state = sensor.name === \"BME\" || sensor.name === \"MPU\" ? checkStateForIndividualSensor(deviceName, `${sensor.name}-Temperature`, sensor.value[0]) : checkStateForIndividualSensor(deviceName, sensor.name, sensor.value);\n          return state === selectedState;\n        })).length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 9\n    }, this), selectedScenario === \"ALL\" && selectedDevice === \"ALL\" ? boards.map((board, index) => displayBoards(board, index)) : boards.filter(board => selectedDevice === \"ALL\" || board.device_id === selectedDevice).filter(board => {\n      var _devices$find5;\n      const deviceName = (_devices$find5 = devices.find(device => device._id === board.device_id)) === null || _devices$find5 === void 0 ? void 0 : _devices$find5.name;\n      return selectedScenario === \"ALL\" || states.some(state => state.scenario === selectedScenario && state.device_name === deviceName);\n    }).map((board, index) => displayBoards(board, index))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 209,\n    columnNumber: 5\n  }, this);\n}\n_s2(Query, \"AugbUCYW04h6Os850kUEkIWr2SI=\");\n_c2 = Query;\nexport { Query };\nvar _c, _c2;\n$RefreshReg$(_c, \"AverageComponent\");\n$RefreshReg$(_c2, \"Query\");","map":{"version":3,"names":["React","useEffect","useState","io","jsxDEV","_jsxDEV","AverageComponent","_ref","_s","device_id","sensor_name","timePeriod","setTimePeriod","average","setAverage","handleInputChange","event","target","value","handleAverageCalculation","fetch","then","response","console","log","ok","Error","status","json","data","catch","error","children","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","Query","_s2","boards","setBoards","devices","setDevices","states","setStates","selectedScenario","setSelectedScenario","selectedDevice","setSelectedDevice","selectedState","setSelectedState","uniqueStates","setUniqueStates","uniqueNames","Array","from","Set","map","s","name","checkStateForIndividualSensor","deviceName","sensorName","sensorValue","matchingStates","filter","state","device_name","toLowerCase","result","condition","parameter","displaySensors","sensor","index","board","_devices$find","find","device","_id","sensorProperties","val","displayBoards","_devices$find3","sensors","_devices$find2","length","className","e","some","_devices$find4","_devices$find5","scenario","_c2","$RefreshReg$"],"sources":["D:/COS40004/COS40004_Project/client/src/Query.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./Query.css\";\r\nimport io from \"socket.io-client\";\r\n\r\nfunction AverageComponent({ device_id, sensor_name }) {\r\n  const [timePeriod, setTimePeriod] = useState(\"\");\r\n  const [average, setAverage] = useState(\"\");\r\n\r\n  const handleInputChange = (event) => {\r\n    setTimePeriod(event.target.value);\r\n  };\r\n\r\n  const handleAverageCalculation = () => {\r\n    fetch(\r\n      `/boards/device/${device_id}/sensor/${sensor_name}?timePeriod=${timePeriod}`\r\n    )\r\n      .then((response) => {\r\n        console.log(response);\r\n        if (!response.ok) {\r\n          throw new Error(`HTTP error! status: ${response.status}`);\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        setAverage(data.average);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"There was an error!\", error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"number\"\r\n        placeholder=\"Enter time in seconds\"\r\n        value={timePeriod}\r\n        onChange={handleInputChange}\r\n      />\r\n      <button onClick={handleAverageCalculation}>Calculate Average</button>\r\n      {average && <p>Average: {average}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Query() {\r\n  const [boards, setBoards] = useState([]);\r\n  const [devices, setDevices] = useState([]);\r\n  const [states, setStates] = useState([]);\r\n  const [selectedScenario, setSelectedScenario] = useState(\"ALL\");\r\n  const [selectedDevice, setSelectedDevice] = useState(\"ALL\");\r\n  const [selectedState, setSelectedState] = useState(\"ALL\");\r\n  const [uniqueStates, setUniqueStates] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(\"/boards\")\r\n      .then((response) => response.json())\r\n      .then((data) => setBoards(data))\r\n      .catch((error) => console.error(\"Error:\", error));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetch(\"/devices\")\r\n      .then((response) => response.json())\r\n      .then((data) => setDevices(data))\r\n      .catch((error) => console.error(\"Error:\", error));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetch(\"/states\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setStates(data);\r\n        let uniqueNames = Array.from(new Set(data.map((s) => s.name)));\r\n        setUniqueStates(uniqueNames);\r\n      })\r\n      .catch((error) => console.error(\"Error:\", error));\r\n  }, []);\r\n\r\n  const checkStateForIndividualSensor = (\r\n    deviceName,\r\n    sensorName,\r\n    sensorValue\r\n  ) => {\r\n    const matchingStates = states.filter((state) => {\r\n      return (\r\n        state.device_name.toLowerCase() === deviceName.toLowerCase() &&\r\n        state.sensor_name.toLowerCase() === sensorName.toLowerCase()\r\n      );\r\n    });\r\n\r\n    let result = \"Default\";\r\n\r\n    for (let state of matchingStates) {\r\n      switch (state.condition) {\r\n        case \"<\":\r\n          if (sensorValue < state.parameter) result = state.name;\r\n          break;\r\n        case \">\":\r\n          if (sensorValue > state.parameter) result = state.name;\r\n          break;\r\n        case \"<=\":\r\n          if (sensorValue <= state.parameter) result = state.name;\r\n          break;\r\n        case \">=\":\r\n          if (sensorValue >= state.parameter) result = state.name;\r\n          break;\r\n        case \"=\":\r\n          if (sensorValue === state.parameter) result = state.name;\r\n          break;\r\n        case \"idle\":\r\n          if (sensorValue === state.parameter) result = state.name;\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n\r\n    return result;\r\n  };\r\n\r\n  const displaySensors = (sensor, index, board) => {\r\n    const deviceName = devices.find(\r\n      (device) => device._id === board.device_id\r\n    )?.name;\r\n\r\n    if (sensor.name === \"BME\" || sensor.name === \"MPU\") {\r\n      const sensorProperties =\r\n        sensor.name === \"BME\"\r\n          ? [\"Temperature\", \"Humidity\", \"Pressure\", \"Gas\"]\r\n          : [\"Acc-X\", \"Acc-Y\", \"Acc-Z\", \"Gyro-X\", \"Gyro-Y\", \"Gyro-Z\"];\r\n      return sensor.value.map((val, index) => {\r\n        const sensorName = `${sensor.name}-${sensorProperties[index]}`;\r\n        const state = checkStateForIndividualSensor(\r\n          deviceName,\r\n          sensorName,\r\n          val\r\n        );\r\n        return (\r\n          <div key={`${sensor.name}-${index}`}>\r\n            <span>{sensorName}</span>\r\n            <span>{val}</span>\r\n            <span>{state}</span>\r\n            <AverageComponent\r\n              device_id={board.device_id}\r\n              sensor_name={sensorName}\r\n            />\r\n          </div>\r\n        );\r\n      });\r\n    } else {\r\n      const state = checkStateForIndividualSensor(\r\n        deviceName,\r\n        sensor.name,\r\n        sensor.value\r\n      );\r\n      return (\r\n        <div key={`${sensor.name}-${index}`}>\r\n          <span>{sensor.name}</span>\r\n          <span>{sensor.value}</span>\r\n          <span>{state}</span>\r\n          <AverageComponent\r\n            device_id={board.device_id}\r\n            sensor_name={sensor.name}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  const displayBoards = (board, index) => {\r\n    if (selectedState !== \"ALL\") {\r\n      board.sensors = board.sensors.filter((sensor) => {\r\n        const deviceName = devices.find(\r\n          (device) => device._id === board.device_id\r\n        )?.name;\r\n        const state =\r\n          sensor.name === \"BME\" || sensor.name === \"MPU\"\r\n            ? checkStateForIndividualSensor(\r\n                deviceName,\r\n                `${sensor.name}-Temperature`,\r\n                sensor.value[0]\r\n              )\r\n            : checkStateForIndividualSensor(\r\n                deviceName,\r\n                sensor.name,\r\n                sensor.value\r\n              );\r\n        return state === selectedState;\r\n      });\r\n      if (board.sensors.length === 0) {\r\n        return null;\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div key={index}>\r\n        <h2>\r\n          {devices.find((device) => device._id === board.device_id)?.name}\r\n        </h2>\r\n        {board.sensors.map((sensor, index) =>\r\n          displaySensors(sensor, index, board)\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div>\r\n        <label>Filter by scenario: </label>\r\n        <select\r\n          onChange={(e) => setSelectedScenario(e.target.value)}\r\n          value={selectedScenario}\r\n        >\r\n          <option value=\"ALL\">ALL</option>\r\n          <option value=\"SCENARIO1\">SCENARIO1</option>\r\n          <option value=\"SCENARIO2\">SCENARIO2</option>\r\n          <option value=\"SCENARIO3\">SCENARIO3</option>\r\n        </select>\r\n      </div>\r\n\r\n      <div>\r\n        <label>Filter by device: </label>\r\n        <select\r\n          onChange={(e) => setSelectedDevice(e.target.value)}\r\n          value={selectedDevice}\r\n        >\r\n          <option value=\"ALL\">ALL</option>\r\n          {devices.map((device, index) => (\r\n            <option key={index} value={device._id}>\r\n              {device.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      {selectedScenario !== \"ALL\" && (\r\n        <div>\r\n          <label>Filter by state: </label>\r\n          <select\r\n            onChange={(e) => setSelectedState(e.target.value)}\r\n            value={selectedState}\r\n          >\r\n            <option value=\"ALL\">ALL</option>\r\n            {uniqueStates.map((state, index) => (\r\n              <option key={index} value={state}>\r\n                {state}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n      )}\r\n\r\n      {selectedState !== \"ALL\" && (\r\n        <div>\r\n          <h2>Devices with a sensor in state \"{selectedState}\":</h2>\r\n          <p>\r\n            {\r\n              boards.filter((board) =>\r\n                board.sensors.some((sensor) => {\r\n                  const deviceName = devices.find(\r\n                    (device) => device._id === board.device_id\r\n                  )?.name;\r\n                  const state =\r\n                    sensor.name === \"BME\" || sensor.name === \"MPU\"\r\n                      ? checkStateForIndividualSensor(\r\n                          deviceName,\r\n                          `${sensor.name}-Temperature`,\r\n                          sensor.value[0]\r\n                        )\r\n                      : checkStateForIndividualSensor(\r\n                          deviceName,\r\n                          sensor.name,\r\n                          sensor.value\r\n                        );\r\n                  return state === selectedState;\r\n                })\r\n              ).length\r\n            }\r\n          </p>\r\n        </div>\r\n      )}\r\n\r\n      {selectedScenario === \"ALL\" && selectedDevice === \"ALL\"\r\n        ? boards.map((board, index) => displayBoards(board, index))\r\n        : boards\r\n            .filter(\r\n              (board) =>\r\n                selectedDevice === \"ALL\" || board.device_id === selectedDevice\r\n            )\r\n            .filter((board) => {\r\n              const deviceName = devices.find(\r\n                (device) => device._id === board.device_id\r\n              )?.name;\r\n              return (\r\n                selectedScenario === \"ALL\" ||\r\n                states.some(\r\n                  (state) =>\r\n                    state.scenario === selectedScenario &&\r\n                    state.device_name === deviceName\r\n                )\r\n              );\r\n            })\r\n            .map((board, index) => displayBoards(board, index))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { Query };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}