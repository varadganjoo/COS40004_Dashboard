{"ast":null,"code":"var _jsxFileName = \"D:\\\\COS40004\\\\COS40004_Project\\\\client\\\\src\\\\Query.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./Query.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AverageComponent(_ref) {\n  _s();\n  let {\n    device_id,\n    sensor_name\n  } = _ref;\n  const [timePeriod, setTimePeriod] = useState(\"\");\n  const [average, setAverage] = useState(\"\");\n  const handleInputChange = event => {\n    setTimePeriod(event.target.value);\n  };\n  const handleAverageCalculation = () => {\n    fetch(`/boards/device/${device_id}/sensor/${sensor_name}?timePeriod=${timePeriod}`).then(response => {\n      console.log(response);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      return response.json();\n    }).then(data => {\n      setAverage(data.average);\n    }).catch(error => {\n      console.log(\"There was an error!\", error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      placeholder: \"Enter time in seconds\",\n      value: timePeriod,\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAverageCalculation,\n      children: \"Calculate Average\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), average && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Average: \", average]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(AverageComponent, \"IDLUuxCvaML1njbXD8GYy76eaKg=\");\n_c = AverageComponent;\nfunction Query() {\n  _s2();\n  const [devices, setDevices] = useState([]);\n  useEffect(() => {\n    fetch(\"/devices\").then(response => response.json()).then(data => {\n      console.log(\"Received devices:\", data);\n      if (data) {\n        setDevices(data);\n        if (scenario !== \"ALL\") {\n          var _relevantDevices$;\n          const relevantDevices = data.filter(device => device === null || device === void 0 ? void 0 : device.name.startsWith(scenario + \"_\"));\n          console.log(\"Relevant devices:\", relevantDevices);\n          setSelectedDevice((_relevantDevices$ = relevantDevices[0]) === null || _relevantDevices$ === void 0 ? void 0 : _relevantDevices$._id);\n        } else {\n          setSelectedDevice(\"\");\n        }\n      }\n    }).catch(error => console.log(\"Error fetching devices:\", error));\n    fetch(\"/states\").then(response => response.json()).then(data => {\n      console.log(\"Received states:\", data);\n      if (data) {\n        setStates(data);\n      }\n    }).catch(error => console.log(\"Error fetching states:\", error));\n    fetch(\"/boards\").then(response => response.json()).then(data => {\n      console.log(\"Received boards:\", data);\n      if (data) {\n        setBoards(data);\n        let newSensorHistories = {};\n        for (let board of data) {\n          for (let sensor of board === null || board === void 0 ? void 0 : board.sensors) {\n            let sensorName = sensor === null || sensor === void 0 ? void 0 : sensor.name.toLowerCase();\n            if (!newSensorHistories[sensorName]) {\n              newSensorHistories[sensorName] = [];\n            }\n            newSensorHistories[sensorName].push({\n              value: sensor === null || sensor === void 0 ? void 0 : sensor.value,\n              timestamp: new Date()\n            });\n          }\n        }\n        console.log(\"Sensor histories:\", newSensorHistories);\n        setSensorHistories(newSensorHistories);\n      }\n    }).catch(error => console.log(\"Error fetching boards:\", error));\n  }, [scenario]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Query\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"All Devices:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), devices.length > 0 ? devices.map(device => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Device: \", device.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }, this), device.sensors.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Sensors:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: device.sensors.map(sensor => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Sensor Name: \", sensor.name, \", Type: \", sensor.type]\n          }, sensor._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No sensors found for this device.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 15\n      }, this)]\n    }, device._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No devices found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n}\n_s2(Query, \"+pBxWusV5TorQrWXgdafIbYrAiQ=\");\n_c2 = Query;\nexport { Query };\nvar _c, _c2;\n$RefreshReg$(_c, \"AverageComponent\");\n$RefreshReg$(_c2, \"Query\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","AverageComponent","_ref","_s","device_id","sensor_name","timePeriod","setTimePeriod","average","setAverage","handleInputChange","event","target","value","handleAverageCalculation","fetch","then","response","console","log","ok","Error","status","json","data","catch","error","children","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","Query","_s2","devices","setDevices","scenario","_relevantDevices$","relevantDevices","filter","device","name","startsWith","setSelectedDevice","_id","setStates","setBoards","newSensorHistories","board","sensor","sensors","sensorName","toLowerCase","push","timestamp","Date","setSensorHistories","className","length","map","_c2","$RefreshReg$"],"sources":["D:/COS40004/COS40004_Project/client/src/Query.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./Query.css\";\r\n\r\nfunction AverageComponent({ device_id, sensor_name }) {\r\n  const [timePeriod, setTimePeriod] = useState(\"\");\r\n  const [average, setAverage] = useState(\"\");\r\n\r\n  const handleInputChange = (event) => {\r\n    setTimePeriod(event.target.value);\r\n  };\r\n\r\n  const handleAverageCalculation = () => {\r\n    fetch(\r\n      `/boards/device/${device_id}/sensor/${sensor_name}?timePeriod=${timePeriod}`\r\n    )\r\n      .then((response) => {\r\n        console.log(response);\r\n        if (!response.ok) {\r\n          throw new Error(`HTTP error! status: ${response.status}`);\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        setAverage(data.average);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"There was an error!\", error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"number\"\r\n        placeholder=\"Enter time in seconds\"\r\n        value={timePeriod}\r\n        onChange={handleInputChange}\r\n      />\r\n      <button onClick={handleAverageCalculation}>Calculate Average</button>\r\n      {average && <p>Average: {average}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Query() {\r\n  const [devices, setDevices] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(\"/devices\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(\"Received devices:\", data);\r\n        if (data) {\r\n          setDevices(data);\r\n          if (scenario !== \"ALL\") {\r\n            const relevantDevices = data.filter((device) =>\r\n              device?.name.startsWith(scenario + \"_\")\r\n            );\r\n            console.log(\"Relevant devices:\", relevantDevices);\r\n            setSelectedDevice(relevantDevices[0]?._id);\r\n          } else {\r\n            setSelectedDevice(\"\");\r\n          }\r\n        }\r\n      })\r\n      .catch((error) => console.log(\"Error fetching devices:\", error));\r\n  \r\n    fetch(\"/states\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(\"Received states:\", data);\r\n        if (data) {\r\n          setStates(data);\r\n        }\r\n      })\r\n      .catch((error) => console.log(\"Error fetching states:\", error));\r\n  \r\n    fetch(\"/boards\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(\"Received boards:\", data);\r\n        if (data) {\r\n          setBoards(data);\r\n          let newSensorHistories = {};\r\n          for (let board of data) {\r\n            for (let sensor of board?.sensors) {\r\n              let sensorName = sensor?.name.toLowerCase();\r\n              if (!newSensorHistories[sensorName]) {\r\n                newSensorHistories[sensorName] = [];\r\n              }\r\n              newSensorHistories[sensorName].push({\r\n                value: sensor?.value,\r\n                timestamp: new Date(),\r\n              });\r\n            }\r\n          }\r\n          console.log(\"Sensor histories:\", newSensorHistories);\r\n          setSensorHistories(newSensorHistories);\r\n        }\r\n      })\r\n      .catch((error) => console.log(\"Error fetching boards:\", error));\r\n  }, [scenario]);\r\n  \r\n\r\n  return (\r\n    <div className=\"Query\">\r\n      <h2>All Devices:</h2>\r\n      {devices.length > 0 ? (\r\n        devices.map((device) => (\r\n          <div key={device._id}>\r\n            <h3>Device: {device.name}</h3>\r\n            {device.sensors.length > 0 ? (\r\n              <div>\r\n                <h4>Sensors:</h4>\r\n                <ul>\r\n                  {device.sensors.map((sensor) => (\r\n                    <li key={sensor._id}>\r\n                      Sensor Name: {sensor.name}, Type: {sensor.type}\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n            ) : (\r\n              <p>No sensors found for this device.</p>\r\n            )}\r\n          </div>\r\n        ))\r\n      ) : (\r\n        <p>No devices found.</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { Query };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}