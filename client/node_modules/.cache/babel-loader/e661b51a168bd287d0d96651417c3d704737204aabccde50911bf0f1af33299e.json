{"ast":null,"code":"var _jsxFileName = \"D:\\\\COS40004\\\\COS40004_Project\\\\client\\\\src\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./Dashboard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const [devices, setDevices] = useState([]);\n  const [states, setStates] = useState([]);\n  useEffect(() => {\n    fetch(\"/devices\").then(res => res.json()).then(data => setDevices(data));\n    fetch(\"/states\").then(res => res.json()).then(data => setStates(data));\n  }, []);\n  function getState(device) {\n    const deviceStates = states.filter(state => state.Device === device.Name);\n    for (const state of deviceStates) {\n      const parameter = device.data.get(state.Device);\n      if (parameter) {\n        const conditionMet = eval(`${parameter} ${state.Condition} ${state.Parameter}`);\n        if (conditionMet) {\n          return state.Name;\n        }\n      }\n    }\n    return \"Unknown\";\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), devices.map(device => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-device\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: device.Name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"State: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: getState(device)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 22\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)]\n      }, device._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"CNM7xr2nGYqqV0bD6nexQLcSQeU=\");\n_c = Dashboard;\nexport { Dashboard };\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Dashboard","_s","devices","setDevices","states","setStates","fetch","then","res","json","data","getState","device","deviceStates","filter","state","Device","Name","parameter","get","conditionMet","eval","Condition","Parameter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","_id","_c","$RefreshReg$"],"sources":["D:/COS40004/COS40004_Project/client/src/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./Dashboard.css\";\r\n\r\nfunction Dashboard() {\r\n  const [devices, setDevices] = useState([]);\r\n  const [states, setStates] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(\"/devices\")\r\n      .then((res) => res.json())\r\n      .then((data) => setDevices(data));\r\n    fetch(\"/states\")\r\n      .then((res) => res.json())\r\n      .then((data) => setStates(data));\r\n  }, []);\r\n\r\n  function getState(device) {\r\n    const deviceStates = states.filter((state) => state.Device === device.Name);\r\n    for (const state of deviceStates) {\r\n      const parameter = device.data.get(state.Device);\r\n      if (parameter) {\r\n        const conditionMet = eval(\r\n          `${parameter} ${state.Condition} ${state.Parameter}`\r\n        );\r\n        if (conditionMet) {\r\n          return state.Name;\r\n        }\r\n      }\r\n    }\r\n    return \"Unknown\";\r\n  }\r\n\r\n  return (\r\n    <div className=\"dashboard-page\">\r\n      <h1>Dashboard</h1>\r\n      {devices.map((device) => {\r\n        return (\r\n          <div key={device._id} className=\"dashboard-device\">\r\n            <h2>{device.Name}</h2>\r\n            <p>\r\n              State: <strong>{getState(device)}</strong>\r\n            </p>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { Dashboard };\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAExCC,SAAS,CAAC,MAAM;IACdS,KAAK,CAAC,UAAU,CAAC,CACdC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAKP,UAAU,CAACO,IAAI,CAAC,CAAC;IACnCJ,KAAK,CAAC,SAAS,CAAC,CACbC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAKL,SAAS,CAACK,IAAI,CAAC,CAAC;EACpC,CAAC,EAAE,EAAE,CAAC;EAEN,SAASC,QAAQA,CAACC,MAAM,EAAE;IACxB,MAAMC,YAAY,GAAGT,MAAM,CAACU,MAAM,CAAEC,KAAK,IAAKA,KAAK,CAACC,MAAM,KAAKJ,MAAM,CAACK,IAAI,CAAC;IAC3E,KAAK,MAAMF,KAAK,IAAIF,YAAY,EAAE;MAChC,MAAMK,SAAS,GAAGN,MAAM,CAACF,IAAI,CAACS,GAAG,CAACJ,KAAK,CAACC,MAAM,CAAC;MAC/C,IAAIE,SAAS,EAAE;QACb,MAAME,YAAY,GAAGC,IAAI,CACtB,GAAEH,SAAU,IAAGH,KAAK,CAACO,SAAU,IAAGP,KAAK,CAACQ,SAAU,EACrD,CAAC;QACD,IAAIH,YAAY,EAAE;UAChB,OAAOL,KAAK,CAACE,IAAI;QACnB;MACF;IACF;IACA,OAAO,SAAS;EAClB;EAEA,oBACElB,OAAA;IAAKyB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7B1B,OAAA;MAAA0B,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACjB3B,OAAO,CAAC4B,GAAG,CAAElB,MAAM,IAAK;MACvB,oBACEb,OAAA;QAAsByB,SAAS,EAAC,kBAAkB;QAAAC,QAAA,gBAChD1B,OAAA;UAAA0B,QAAA,EAAKb,MAAM,CAACK;QAAI;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACtB9B,OAAA;UAAA0B,QAAA,GAAG,SACM,eAAA1B,OAAA;YAAA0B,QAAA,EAASd,QAAQ,CAACC,MAAM;UAAC;YAAAc,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAS,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzC,CAAC;MAAA,GAJIjB,MAAM,CAACmB,GAAG;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKf,CAAC;IAEV,CAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAAC5B,EAAA,CA5CQD,SAAS;AAAAgC,EAAA,GAAThC,SAAS;AA8ClB,SAASA,SAAS;AAAG,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}