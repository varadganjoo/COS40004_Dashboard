{"ast":null,"code":"var _jsxFileName = \"D:\\\\COS40004\\\\COS40004_Project\\\\client\\\\src\\\\States.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./States.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction States() {\n  _s();\n  const [states, setStates] = useState([]);\n  const [devices, setDevices] = useState([]);\n  const [sensors, setSensors] = useState([]);\n  const [newState, setNewState] = useState({\n    name: \"\",\n    device_name: \"\",\n    condition: \"\",\n    sensor_name: \"\",\n    parameter: \"\"\n  });\n  const [sensorAttributes, setSensorAttributes] = useState([]);\n  const [selectedAttribute, setSelectedAttribute] = useState(\"\");\n  useEffect(() => {\n    fetch(\"/states\").then(res => {\n      if (!res.ok) {\n        throw new Error(`HTTP error ${res.status}`);\n      }\n      return res.json();\n    }).then(data => setStates(data)).catch(err => console.error(\"Error fetching states:\", err));\n    fetch(\"/devices\").then(res => {\n      if (!res.ok) {\n        throw new Error(`HTTP error ${res.status}`);\n      }\n      return res.json();\n    }).then(data => setDevices(data)).catch(err => console.error(\"Error fetching devices:\", err));\n  }, []);\n  const handleDeviceChange = e => {\n    const selectedDeviceId = e.target.value;\n    setNewState({\n      ...newState,\n      device_name: selectedDeviceId\n    });\n    fetch(`/boards/${selectedDeviceId}`).then(res => {\n      if (!res.ok) {\n        throw new Error(`HTTP error ${res.status}`);\n      }\n      return res.json();\n    }).then(sensorNames => setSensors(sensorNames)).catch(err => console.error(\"Error fetching device sensors:\", err));\n  };\n  const handleInputChange = e => {\n    setNewState({\n      ...newState,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSensorChange = e => {\n    const selectedSensor = e.target.value;\n    setNewState({\n      ...newState,\n      sensor_name: selectedSensor\n    });\n    if (selectedSensor === \"BME\") {\n      setSensorAttributes([\"temperature\", \"humidity\", \"pressure\", \"gas\"]);\n    } else if (selectedSensor === \"MPU\") {\n      setSensorAttributes([\"Acc-X\", \"Acc-Y\", \"Acc-Z\", \"Gyro-X\", \"Gyro-Y\", \"Gyro-Z\"]);\n    } else {\n      setSensorAttributes([]);\n    }\n  };\n  const handleAttributeChange = e => {\n    const selectedAttribute = e.target.value;\n    setSelectedAttribute(selectedAttribute);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // Find the device name using the device id\n    const device = devices.find(device => device._id === newState.device_name);\n    const deviceName = device ? device.name : \"\";\n\n    // Append the attribute to the sensor name\n    const sensorName = newState.sensor_name + (selectedAttribute ? \"-\" + selectedAttribute : \"\");\n\n    // Create a new object with the device name instead of id\n    const stateToSubmit = {\n      ...newState,\n      device_name: deviceName,\n      sensor_name: sensorName\n    };\n    fetch(\"/states\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(stateToSubmit)\n    }).then(res => {\n      if (!res.ok) {\n        throw new Error(`HTTP error ${res.status}`);\n      }\n      return res.json();\n    }).then(data => {\n      setStates([...states, data]);\n      setNewState({\n        name: \"\",\n        device_name: \"\",\n        condition: \"\",\n        sensor_name: \"\",\n        parameter: \"\"\n      });\n    }).catch(err => console.error(\"Error submitting new state:\", err));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"states-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"States\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Device\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Sensor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Condition\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Parameter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: states.map(state => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: state.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: state.device_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: state.sensor_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: state.condition\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: state.parameter\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 15\n          }, this)]\n        }, state._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add State\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"state-name\",\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"state-name\",\n          name: \"name\",\n          value: newState.name,\n          onChange: handleInputChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), newState.name && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"device-name\",\n          children: \"Device:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"device-name\",\n          name: \"device_name\",\n          value: newState.device_name,\n          onChange: handleDeviceChange,\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select device\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 15\n          }, this), devices.map(device => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: device._id,\n            children: device.name\n          }, device._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this), newState.device_name && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"sensor-name\",\n          children: \"Sensor:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"sensor-name\",\n          name: \"sensor_name\",\n          value: newState.sensor_name,\n          onChange: handleSensorChange,\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select sensor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 15\n          }, this), sensors.map(sensor => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: sensor,\n            children: sensor\n          }, sensor, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }, this), newState.sensor_name && (newState.sensor_name === \"BME\" || newState.sensor_name === \"MPU\") && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"sensor-attribute\",\n          children: \"Attribute:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"sensor-attribute\",\n          name: \"sensor_attribute\",\n          onChange: handleAttributeChange,\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select attribute\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 17\n          }, this), sensorAttributes.map((attribute, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: attribute,\n            children: attribute\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 19\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 13\n      }, this), newState.sensor_name && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"condition\",\n          children: \"Condition:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"condition\",\n          name: \"condition\",\n          value: newState.condition,\n          onChange: handleInputChange,\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a condition\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"<\",\n            children: \"<\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \">\",\n            children: \">\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"<=\",\n            children: \"<=\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \">=\",\n            children: \">=\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"=\",\n            children: \"=\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"=\",\n            children: \"=\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"=\",\n            children: \"=\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 47\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 11\n      }, this), newState.condition && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"parameter\",\n          children: \"Parameter:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"parameter\",\n          name: \"parameter\",\n          value: newState.parameter,\n          onChange: handleInputChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n}\n_s(States, \"0fzfG3DvPf+LJKzhNESgseaX6Js=\");\n_c = States;\nexport { States };\nvar _c;\n$RefreshReg$(_c, \"States\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","States","_s","states","setStates","devices","setDevices","sensors","setSensors","newState","setNewState","name","device_name","condition","sensor_name","parameter","sensorAttributes","setSensorAttributes","selectedAttribute","setSelectedAttribute","fetch","then","res","ok","Error","status","json","data","catch","err","console","error","handleDeviceChange","e","selectedDeviceId","target","value","sensorNames","handleInputChange","handleSensorChange","selectedSensor","handleAttributeChange","handleSubmit","preventDefault","device","find","_id","deviceName","sensorName","stateToSubmit","method","headers","body","JSON","stringify","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","state","onSubmit","htmlFor","type","id","onChange","required","sensor","attribute","index","_c","$RefreshReg$"],"sources":["D:/COS40004/COS40004_Project/client/src/States.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./States.css\";\r\n\r\nfunction States() {\r\n  const [states, setStates] = useState([]);\r\n  const [devices, setDevices] = useState([]);\r\n  const [sensors, setSensors] = useState([]);\r\n  const [newState, setNewState] = useState({\r\n    name: \"\",\r\n    device_name: \"\",\r\n    condition: \"\",\r\n    sensor_name: \"\",\r\n    parameter: \"\",\r\n  });\r\n\r\n  const [sensorAttributes, setSensorAttributes] = useState([]);\r\n  const [selectedAttribute, setSelectedAttribute] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    fetch(\"/states\")\r\n      .then((res) => {\r\n        if (!res.ok) {\r\n          throw new Error(`HTTP error ${res.status}`);\r\n        }\r\n        return res.json();\r\n      })\r\n      .then((data) => setStates(data))\r\n      .catch((err) => console.error(\"Error fetching states:\", err));\r\n\r\n    fetch(\"/devices\")\r\n      .then((res) => {\r\n        if (!res.ok) {\r\n          throw new Error(`HTTP error ${res.status}`);\r\n        }\r\n        return res.json();\r\n      })\r\n      .then((data) => setDevices(data))\r\n      .catch((err) => console.error(\"Error fetching devices:\", err));\r\n  }, []);\r\n\r\n  const handleDeviceChange = (e) => {\r\n    const selectedDeviceId = e.target.value;\r\n    setNewState({ ...newState, device_name: selectedDeviceId });\r\n\r\n    fetch(`/boards/${selectedDeviceId}`)\r\n      .then((res) => {\r\n        if (!res.ok) {\r\n          throw new Error(`HTTP error ${res.status}`);\r\n        }\r\n        return res.json();\r\n      })\r\n      .then((sensorNames) => setSensors(sensorNames))\r\n      .catch((err) => console.error(\"Error fetching device sensors:\", err));\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    setNewState({ ...newState, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSensorChange = (e) => {\r\n    const selectedSensor = e.target.value;\r\n    setNewState({ ...newState, sensor_name: selectedSensor });\r\n\r\n    if (selectedSensor === \"BME\") {\r\n      setSensorAttributes([\"temperature\", \"humidity\", \"pressure\", \"gas\"]);\r\n    } else if (selectedSensor === \"MPU\") {\r\n      setSensorAttributes([\r\n        \"Acc-X\",\r\n        \"Acc-Y\",\r\n        \"Acc-Z\",\r\n        \"Gyro-X\",\r\n        \"Gyro-Y\",\r\n        \"Gyro-Z\",\r\n      ]);\r\n    } else {\r\n      setSensorAttributes([]);\r\n    }\r\n  };\r\n\r\n  const handleAttributeChange = (e) => {\r\n    const selectedAttribute = e.target.value;\r\n    setSelectedAttribute(selectedAttribute);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    // Find the device name using the device id\r\n    const device = devices.find(\r\n      (device) => device._id === newState.device_name\r\n    );\r\n    const deviceName = device ? device.name : \"\";\r\n\r\n    // Append the attribute to the sensor name\r\n    const sensorName =\r\n      newState.sensor_name + (selectedAttribute ? \"-\" + selectedAttribute : \"\");\r\n\r\n    // Create a new object with the device name instead of id\r\n    const stateToSubmit = {\r\n      ...newState,\r\n      device_name: deviceName,\r\n      sensor_name: sensorName,\r\n    };\r\n\r\n    fetch(\"/states\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(stateToSubmit),\r\n    })\r\n      .then((res) => {\r\n        if (!res.ok) {\r\n          throw new Error(`HTTP error ${res.status}`);\r\n        }\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        setStates([...states, data]);\r\n        setNewState({\r\n          name: \"\",\r\n          device_name: \"\",\r\n          condition: \"\",\r\n          sensor_name: \"\",\r\n          parameter: \"\",\r\n        });\r\n      })\r\n      .catch((err) => console.error(\"Error submitting new state:\", err));\r\n  };\r\n\r\n  return (\r\n    <div className=\"states-page\">\r\n      <h1>States</h1>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Device</th>\r\n            <th>Sensor</th>\r\n            <th>Condition</th>\r\n            <th>Parameter</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {states.map((state) => (\r\n            <tr key={state._id}>\r\n              <td>{state.name}</td>\r\n              <td>{state.device_name}</td>\r\n              <td>{state.sensor_name}</td>\r\n              <td>{state.condition}</td>\r\n              <td>{state.parameter}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      <form onSubmit={handleSubmit}>\r\n        <h2>Add State</h2>\r\n        <div>\r\n          <label htmlFor=\"state-name\">Name:</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"state-name\"\r\n            name=\"name\"\r\n            value={newState.name}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n        </div>\r\n        {newState.name && (\r\n          <div>\r\n            <label htmlFor=\"device-name\">Device:</label>\r\n            <select\r\n              id=\"device-name\"\r\n              name=\"device_name\"\r\n              value={newState.device_name}\r\n              onChange={handleDeviceChange}\r\n              required\r\n            >\r\n              <option value=\"\">Select device</option>\r\n              {devices.map((device) => (\r\n                <option key={device._id} value={device._id}>\r\n                  {device.name}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n        )}\r\n        {newState.device_name && (\r\n          <div>\r\n            <label htmlFor=\"sensor-name\">Sensor:</label>\r\n            <select\r\n              id=\"sensor-name\"\r\n              name=\"sensor_name\"\r\n              value={newState.sensor_name}\r\n              onChange={handleSensorChange}\r\n              required\r\n            >\r\n              <option value=\"\">Select sensor</option>\r\n              {sensors.map((sensor) => (\r\n                <option key={sensor} value={sensor}>\r\n                  {sensor}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n        )}\r\n        {newState.sensor_name &&\r\n          (newState.sensor_name === \"BME\" ||\r\n            newState.sensor_name === \"MPU\") && (\r\n            <div>\r\n              <label htmlFor=\"sensor-attribute\">Attribute:</label>\r\n              <select\r\n                id=\"sensor-attribute\"\r\n                name=\"sensor_attribute\"\r\n                onChange={handleAttributeChange}\r\n                required\r\n              >\r\n                <option value=\"\">Select attribute</option>\r\n                {sensorAttributes.map((attribute, index) => (\r\n                  <option key={index} value={attribute}>\r\n                    {attribute}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n          )}\r\n        {newState.sensor_name && (\r\n          <div>\r\n            <label htmlFor=\"condition\">Condition:</label>\r\n            <select\r\n              id=\"condition\"\r\n              name=\"condition\"\r\n              value={newState.condition}\r\n              onChange={handleInputChange}\r\n              required\r\n            >\r\n              <option value=\"\">Select a condition</option>\r\n              <option value=\"<\">{\"<\"}</option>\r\n              <option value=\">\">{\">\"}</option>\r\n              <option value=\"<=\">{\"<=\"}</option>\r\n              <option value=\">=\">{\">=\"}</option>\r\n              <option value=\"=\">{\"=\"}</option>\r\n              <option value=\"=\">{\"=\"}</option><option value=\"=\">{\"=\"}</option>\r\n            </select>\r\n          </div>\r\n        )}\r\n        {newState.condition && (\r\n          <div>\r\n            <label htmlFor=\"parameter\">Parameter:</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"parameter\"\r\n              name=\"parameter\"\r\n              value={newState.parameter}\r\n              onChange={handleInputChange}\r\n              required\r\n            />\r\n          </div>\r\n        )}\r\n        <button type=\"submit\">Add</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { States };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}