{"ast":null,"code":"var _jsxFileName = \"D:\\\\COS40004\\\\COS40004_Project\\\\client\\\\src\\\\DeviceManager.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DeviceManager = () => {\n  _s();\n  const [devices, setDevices] = useState([]);\n  const [editedNames, setEditedNames] = useState({});\n  const [editing, setEditing] = useState({});\n  useEffect(() => {\n    fetch(\"/devices\").then(res => {\n      if (!res.ok) {\n        throw new Error(`HTTP error ${res.status}`);\n      }\n      return res.json();\n    }).then(data => {\n      setDevices(data.filter(device => device.name === \"default\"));\n      const newEditedNames = data.reduce((acc, device) => ({\n        ...acc,\n        [device._id]: device.name\n      }), {});\n      setEditedNames(newEditedNames);\n    }).catch(err => console.error(\"Error fetching devices:\", err));\n  }, []);\n  const handleEditClick = id => {\n    setEditing({\n      ...editing,\n      [id]: true\n    });\n  };\n  const handleNameChange = (id, newName) => {\n    setEditedNames({\n      ...editedNames,\n      [id]: newName\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    fetch(`/devices/${device._id}`, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: newName\n      })\n    }).then(res => {\n      if (!res.ok) {\n        throw new Error(`HTTP error ${res.status}`);\n      }\n      return res.json();\n    }).then(updatedDevice => {\n      setEditing(false);\n      setDevice(updatedDevice);\n    }).catch(err => console.error('Error updating device:', err));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Device Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), devices.map(device => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: device.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: device._id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), editing[device._id] ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: editedNames[device._id] || \"\",\n          onChange: e => handleNameChange(device._id, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleNameSubmit(device._id),\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleEditClick(device._id),\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this)]\n    }, device._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(DeviceManager, \"m21yiOg8BiAxPuzCKGfLWMLe5dQ=\");\n_c = DeviceManager;\nexport { DeviceManager };\nvar _c;\n$RefreshReg$(_c, \"DeviceManager\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","DeviceManager","_s","devices","setDevices","editedNames","setEditedNames","editing","setEditing","fetch","then","res","ok","Error","status","json","data","filter","device","name","newEditedNames","reduce","acc","_id","catch","err","console","error","handleEditClick","id","handleNameChange","newName","handleSubmit","e","preventDefault","method","headers","body","JSON","stringify","updatedDevice","setDevice","children","fileName","_jsxFileName","lineNumber","columnNumber","map","type","value","onChange","target","onClick","handleNameSubmit","_c","$RefreshReg$"],"sources":["D:/COS40004/COS40004_Project/client/src/DeviceManager.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst DeviceManager = () => {\r\n  const [devices, setDevices] = useState([]);\r\n  const [editedNames, setEditedNames] = useState({});\r\n  const [editing, setEditing] = useState({});\r\n\r\n  useEffect(() => {\r\n    fetch(\"/devices\")\r\n      .then((res) => {\r\n        if (!res.ok) {\r\n          throw new Error(`HTTP error ${res.status}`);\r\n        }\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        setDevices(data.filter((device) => device.name === \"default\"));\r\n        const newEditedNames = data.reduce(\r\n          (acc, device) => ({ ...acc, [device._id]: device.name }),\r\n          {}\r\n        );\r\n        setEditedNames(newEditedNames);\r\n      })\r\n      .catch((err) => console.error(\"Error fetching devices:\", err));\r\n  }, []);\r\n\r\n  const handleEditClick = (id) => {\r\n    setEditing({ ...editing, [id]: true });\r\n  };\r\n\r\n  const handleNameChange = (id, newName) => {\r\n    setEditedNames({ ...editedNames, [id]: newName });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n  \r\n    fetch(`/devices/${device._id}`, {\r\n      method: 'PATCH',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ name: newName }),\r\n    })\r\n      .then((res) => {\r\n        if (!res.ok) {\r\n          throw new Error(`HTTP error ${res.status}`);\r\n        }\r\n        return res.json();\r\n      })\r\n      .then((updatedDevice) => {\r\n        setEditing(false);\r\n        setDevice(updatedDevice);\r\n      })\r\n      .catch((err) => console.error('Error updating device:', err));\r\n  };\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <h1>Device Manager</h1>\r\n      {devices.map((device) => (\r\n        <div key={device._id}>\r\n          <h2>{device.name}</h2>\r\n          <p>{device._id}</p>\r\n          {editing[device._id] ? (\r\n            <>\r\n              <input\r\n                type=\"text\"\r\n                value={editedNames[device._id] || \"\"}\r\n                onChange={(e) => handleNameChange(device._id, e.target.value)}\r\n              />\r\n              <button onClick={() => handleNameSubmit(device._id)}>\r\n                Submit\r\n              </button>\r\n            </>\r\n          ) : (\r\n            <button onClick={() => handleEditClick(device._id)}>Edit</button>\r\n          )}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { DeviceManager };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}